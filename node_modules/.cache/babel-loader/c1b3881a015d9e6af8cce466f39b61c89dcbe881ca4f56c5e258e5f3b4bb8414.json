{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\keeper-part-3-completed\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TagSelector from \"./TagSelector\";\nimport jsPDF from \"jspdf\";\nfunction Note(_ref) {\n  _s();\n  let {\n    id,\n    title,\n    content,\n    tags,\n    checklist = [],\n    reminder,\n    onDelete,\n    onEdit,\n    editing,\n    onSaveEdit,\n    onTogglePin,\n    onArchive,\n    archived,\n    pinned,\n    allTags,\n    highlightText,\n    search,\n    selected,\n    onSelect\n  } = _ref;\n  const [editMode, setEditMode] = useState(editing);\n  const [editNote, setEditNote] = useState({\n    title,\n    content,\n    tags,\n    checklist,\n    reminder\n  });\n  const [copied, setCopied] = useState(false);\n  const [pdfExported, setPdfExported] = useState(false);\n  const noteRef = useRef(null);\n  useEffect(() => {\n    setEditMode(editing);\n    setEditNote({\n      title,\n      content,\n      tags,\n      checklist,\n      reminder\n    });\n    if (editing && noteRef.current) noteRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\"\n    });\n  }, [editing, title, content, tags, checklist, reminder]);\n  function handleDelete() {\n    // Only delete if this note is selected\n    if (selected) onDelete(id);\n  }\n  function handleEdit() {\n    setEditMode(true);\n    onEdit(id);\n  }\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditNote(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n  function handleReminderChange(e) {\n    setEditNote(prev => ({\n      ...prev,\n      reminder: e.target.value\n    }));\n  }\n  function handleTagsChange(selectedTags) {\n    setEditNote(prev => ({\n      ...prev,\n      tags: selectedTags\n    }));\n  }\n  function handleChecklistChange(idx, checked) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.map((item, i) => i === idx ? {\n        ...item,\n        checked\n      } : item)\n    }));\n  }\n  function handleChecklistText(idx, text) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.map((item, i) => i === idx ? {\n        ...item,\n        text\n      } : item)\n    }));\n  }\n  function addChecklistItem() {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: [...(prev.checklist || []), {\n        text: \"\",\n        checked: false\n      }]\n    }));\n  }\n  function removeChecklistItem(idx) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.filter((_, i) => i !== idx)\n    }));\n  }\n  function handleSave() {\n    if (!editNote.title.trim() && !editNote.content.trim() && (!editNote.checklist || editNote.checklist.length === 0)) return;\n    onSaveEdit(id, editNote);\n    setEditMode(false);\n  }\n  function handleCancel() {\n    setEditMode(false);\n    setEditNote({\n      title,\n      content,\n      tags,\n      checklist,\n      reminder\n    });\n    onSaveEdit(id, {\n      title,\n      content,\n      tags,\n      checklist,\n      reminder\n    });\n  }\n  function getPlainText() {\n    let txt = `Title: ${title}\\n`;\n    if (content) txt += `Content: ${content}\\n`;\n    if (checklist && checklist.length > 0) {\n      txt += 'Checklist:\\n';\n      checklist.forEach(item => {\n        txt += `- [${item.checked ? 'x' : ' '}] ${item.text}\\n`;\n      });\n    }\n    if (tags && tags.length > 0) txt += `Tags: ${tags.join(\", \")}`;\n    if (reminder) txt += `\\nReminder: ${reminder}`;\n    return txt;\n  }\n  function handleCopy() {\n    navigator.clipboard.writeText(getPlainText());\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1400);\n  }\n  function handleExportTxt() {\n    const blob = new Blob([getPlainText()], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title || 'note'}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n  function handleExportPdf() {\n    const doc = new jsPDF();\n    let y = 15;\n    doc.setFontSize(16);\n    doc.text(title || 'Untitled Note', 10, y);\n    y += 10;\n    doc.setFontSize(12);\n    if (content) {\n      const lines = doc.splitTextToSize(content, 180);\n      doc.text('Content:', 10, y);\n      y += 7;\n      doc.text(lines, 12, y);\n      y += lines.length * 7;\n    }\n    if (checklist && checklist.length > 0) {\n      doc.text('Checklist:', 10, y);\n      y += 7;\n      checklist.forEach(item => {\n        doc.text(`- [${item.checked ? 'x' : ' '}] ${item.text}`, 12, y);\n        y += 7;\n      });\n    }\n    if (tags && tags.length > 0) {\n      doc.text(`Tags: ${tags.join(', ')}`, 10, y);\n      y += 7;\n    }\n    if (reminder) {\n      doc.text(`Reminder: ${reminder}`, 10, y);\n      y += 7;\n    }\n    doc.save(`${title || 'note'}.pdf`);\n    setPdfExported(true);\n    setTimeout(() => setPdfExported(false), 1400);\n  }\n\n  // Reminder display helpers\n  const isOverdue = reminder && new Date(reminder) < new Date();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `note-card fade-in${archived ? \" archived\" : \"\"}${selected ? \" selected\" : \"\"}`,\n    ref: noteRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"note-select-checkbox\",\n    checked: !!selected,\n    onChange: () => onSelect(id),\n    \"aria-label\": selected ? \"Deselect note\" : \"Select note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-title-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"note-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, highlightText ? highlightText(title, search) : title), pinned && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"note-pin\",\n    title: \"Pinned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 22\n    }\n  }, \"\\uD83D\\uDCCC\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, (tags || []).map(tag => /*#__PURE__*/React.createElement(\"span\", {\n    key: tag,\n    className: \"tag-chip\",\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, tag)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"note-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, highlightText ? highlightText(content, search) : content), checklist && checklist.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"checklist-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, checklist.map((item, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    className: item.checked ? \"checked\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: item.checked,\n    readOnly: true,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, item.text)))), reminder && /*#__PURE__*/React.createElement(\"div\", {\n    className: `reminder-view${isOverdue ? \" overdue\" : \"\"}`,\n    title: isOverdue ? \"Reminder overdue!\" : \"Reminder set\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reminder-bell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"\\u23F0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reminder-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, new Date(reminder).toLocaleString()), isOverdue && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reminder-overdue-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 27\n    }\n  }, \"(Overdue)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon-btn delete-btn\",\n    onClick: handleDelete,\n    \"aria-label\": \"Delete note\",\n    title: selected ? \"Delete\" : \"Select to delete\",\n    disabled: !selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 167\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon-btn edit-btn\",\n    onClick: handleEdit,\n    \"aria-label\": \"Edit note\",\n    title: \"Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 104\n    }\n  }, \"\\u270E\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: `icon-btn ${archived ? \"unarchive-btn\" : \"archive-btn\"}`,\n    onClick: () => onArchive(id),\n    \"aria-label\": archived ? \"Unarchive note\" : \"Archive note\",\n    title: archived ? \"Unarchive\" : \"Archive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, archived ? \"↩️\" : \"🗄️\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon-btn copy-btn\",\n    onClick: handleCopy,\n    \"aria-label\": \"Copy note to clipboard\",\n    title: \"Copy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, copied ? \"✓\" : \"📋\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon-btn export-btn\",\n    onClick: handleExportTxt,\n    \"aria-label\": \"Export note as text\",\n    title: \"Export as TXT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 130\n    }\n  }, \"\\u2B07\\uFE0F\"), \" TXT\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon-btn export-btn\",\n    onClick: handleExportPdf,\n    \"aria-label\": \"Export note as PDF\",\n    title: \"Export as PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 129\n    }\n  }, pdfExported ? \"✓\" : \"⬇️\"), \" PDF\")));\n}\n_s(Note, \"G1xSoVTLYtf7LPxu+7ed4MtvI/c=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TagSelector","jsPDF","Note","_ref","_s","id","title","content","tags","checklist","reminder","onDelete","onEdit","editing","onSaveEdit","onTogglePin","onArchive","archived","pinned","allTags","highlightText","search","selected","onSelect","editMode","setEditMode","editNote","setEditNote","copied","setCopied","pdfExported","setPdfExported","noteRef","current","scrollIntoView","behavior","block","handleDelete","handleEdit","handleChange","e","name","value","target","prev","handleReminderChange","handleTagsChange","selectedTags","handleChecklistChange","idx","checked","map","item","i","handleChecklistText","text","addChecklistItem","removeChecklistItem","filter","_","handleSave","trim","length","handleCancel","getPlainText","txt","forEach","join","handleCopy","navigator","clipboard","writeText","setTimeout","handleExportTxt","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleExportPdf","doc","y","setFontSize","lines","splitTextToSize","save","isOverdue","Date","className","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","tag","key","tabIndex","readOnly","toLocaleString","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Web Development/keeper-part-3-completed/src/components/Note.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport TagSelector from \"./TagSelector\";\nimport jsPDF from \"jspdf\";\n\nfunction Note({ id, title, content, tags, checklist = [], reminder, onDelete, onEdit, editing, onSaveEdit, onTogglePin, onArchive, archived, pinned, allTags, highlightText, search, selected, onSelect }) {\n  const [editMode, setEditMode] = useState(editing);\n  const [editNote, setEditNote] = useState({ title, content, tags, checklist, reminder });\n  const [copied, setCopied] = useState(false);\n  const [pdfExported, setPdfExported] = useState(false);\n  const noteRef = useRef(null);\n\n  useEffect(() => {\n    setEditMode(editing);\n    setEditNote({ title, content, tags, checklist, reminder });\n    if (editing && noteRef.current) noteRef.current.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n  }, [editing, title, content, tags, checklist, reminder]);\n\n  function handleDelete() {\n    // Only delete if this note is selected\n    if (selected) onDelete(id);\n  }\n\n  function handleEdit() {\n    setEditMode(true);\n    onEdit(id);\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setEditNote(prev => ({ ...prev, [name]: value }));\n  }\n\n  function handleReminderChange(e) {\n    setEditNote(prev => ({ ...prev, reminder: e.target.value }));\n  }\n\n  function handleTagsChange(selectedTags) {\n    setEditNote(prev => ({ ...prev, tags: selectedTags }));\n  }\n\n  function handleChecklistChange(idx, checked) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.map((item, i) => i === idx ? { ...item, checked } : item)\n    }));\n  }\n\n  function handleChecklistText(idx, text) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.map((item, i) => i === idx ? { ...item, text } : item)\n    }));\n  }\n\n  function addChecklistItem() {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: [...(prev.checklist || []), { text: \"\", checked: false }]\n    }));\n  }\n\n  function removeChecklistItem(idx) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.filter((_, i) => i !== idx)\n    }));\n  }\n\n  function handleSave() {\n    if (!editNote.title.trim() && !editNote.content.trim() && (!editNote.checklist || editNote.checklist.length === 0)) return;\n    onSaveEdit(id, editNote);\n    setEditMode(false);\n  }\n\n  function handleCancel() {\n    setEditMode(false);\n    setEditNote({ title, content, tags, checklist, reminder });\n    onSaveEdit(id, { title, content, tags, checklist, reminder });\n  }\n\n  function getPlainText() {\n    let txt = `Title: ${title}\\n`;\n    if (content) txt += `Content: ${content}\\n`;\n    if (checklist && checklist.length > 0) {\n      txt += 'Checklist:\\n';\n      checklist.forEach(item => {\n        txt += `- [${item.checked ? 'x' : ' '}] ${item.text}\\n`;\n      });\n    }\n    if (tags && tags.length > 0) txt += `Tags: ${tags.join(\", \")}`;\n    if (reminder) txt += `\\nReminder: ${reminder}`;\n    return txt;\n  }\n\n  function handleCopy() {\n    navigator.clipboard.writeText(getPlainText());\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1400);\n  }\n\n  function handleExportTxt() {\n    const blob = new Blob([getPlainText()], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title || 'note'}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  function handleExportPdf() {\n    const doc = new jsPDF();\n    let y = 15;\n    doc.setFontSize(16);\n    doc.text(title || 'Untitled Note', 10, y);\n    y += 10;\n    doc.setFontSize(12);\n    if (content) {\n      const lines = doc.splitTextToSize(content, 180);\n      doc.text('Content:', 10, y);\n      y += 7;\n      doc.text(lines, 12, y);\n      y += lines.length * 7;\n    }\n    if (checklist && checklist.length > 0) {\n      doc.text('Checklist:', 10, y);\n      y += 7;\n      checklist.forEach(item => {\n        doc.text(`- [${item.checked ? 'x' : ' '}] ${item.text}`, 12, y);\n        y += 7;\n      });\n    }\n    if (tags && tags.length > 0) {\n      doc.text(`Tags: ${tags.join(', ')}`, 10, y);\n      y += 7;\n    }\n    if (reminder) {\n      doc.text(`Reminder: ${reminder}`, 10, y);\n      y += 7;\n    }\n    doc.save(`${title || 'note'}.pdf`);\n    setPdfExported(true);\n    setTimeout(() => setPdfExported(false), 1400);\n  }\n\n  // Reminder display helpers\n  const isOverdue = reminder && new Date(reminder) < new Date();\n\n  return (\n    <div className={`note-card fade-in${archived ? \" archived\" : \"\"}${selected ? \" selected\" : \"\"}`} ref={noteRef}>\n      <div className=\"note-card-header\">\n        <input\n          type=\"checkbox\"\n          className=\"note-select-checkbox\"\n          checked={!!selected}\n          onChange={() => onSelect(id)}\n          aria-label={selected ? \"Deselect note\" : \"Select note\"}\n        />\n        <div className=\"note-title-section\">\n          <h1 className=\"note-title\">{highlightText ? highlightText(title, search) : title}</h1>\n          {pinned && <span className=\"note-pin\" title=\"Pinned\">📌</span>}\n        </div>\n        <div className=\"note-tags\">\n          {(tags || []).map(tag => (\n            <span key={tag} className=\"tag-chip\" tabIndex={-1}>{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"note-card-content\">\n        <p className=\"note-content\">{highlightText ? highlightText(content, search) : content}</p>\n        {(checklist && checklist.length > 0) && (\n          <ul className=\"checklist-view\">\n            {checklist.map((item, idx) => (\n              <li key={idx} className={item.checked ? \"checked\" : \"\"}>\n                <input\n                  type=\"checkbox\"\n                  checked={item.checked}\n                  readOnly\n                  tabIndex={-1}\n                />\n                <span>{item.text}</span>\n              </li>\n            ))}\n          </ul>\n        )}\n        {reminder && (\n          <div className={`reminder-view${isOverdue ? \" overdue\" : \"\"}`} title={isOverdue ? \"Reminder overdue!\" : \"Reminder set\"}>\n            <span className=\"reminder-bell\">⏰</span>\n            <span className=\"reminder-time\">{new Date(reminder).toLocaleString()}</span>\n            {isOverdue && <span className=\"reminder-overdue-label\">(Overdue)</span>}\n          </div>\n        )}\n      </div>\n      <div className=\"note-card-actions\">\n        {/* Only show delete button as enabled if selected */}\n        <button className=\"icon-btn delete-btn\" onClick={handleDelete} aria-label=\"Delete note\" title={selected ? \"Delete\" : \"Select to delete\"} disabled={!selected}><span>🗑️</span></button>\n        <button className=\"icon-btn edit-btn\" onClick={handleEdit} aria-label=\"Edit note\" title=\"Edit\"><span>✎</span></button>\n        <button\n          className={`icon-btn ${archived ? \"unarchive-btn\" : \"archive-btn\"}`}\n          onClick={() => onArchive(id)}\n          aria-label={archived ? \"Unarchive note\" : \"Archive note\"}\n          title={archived ? \"Unarchive\" : \"Archive\"}\n        >\n          <span>{archived ? \"↩️\" : \"🗄️\"}</span>\n        </button>\n        <button className=\"icon-btn copy-btn\" onClick={handleCopy} aria-label=\"Copy note to clipboard\" title=\"Copy\">\n          <span>{copied ? \"✓\" : \"📋\"}</span>\n        </button>\n        <button className=\"icon-btn export-btn\" onClick={handleExportTxt} aria-label=\"Export note as text\" title=\"Export as TXT\"><span>⬇️</span> TXT</button>\n        <button className=\"icon-btn export-btn\" onClick={handleExportPdf} aria-label=\"Export note as PDF\" title=\"Export as PDF\"><span>{pdfExported ? \"✓\" : \"⬇️\"}</span> PDF</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Note;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}