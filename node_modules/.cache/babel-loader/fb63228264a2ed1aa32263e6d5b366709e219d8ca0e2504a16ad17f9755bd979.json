{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\keeper-part-3-completed\\\\src\\\\components\\\\DropboxSync.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Dropbox JS SDK via CDN (for browser)\nconst DROPBOX_SDK_URL = \"https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js\";\nfunction loadDropboxSdk(cb) {\n  if (window.Dropbox) return cb();\n  const script = document.createElement(\"script\");\n  script.src = DROPBOX_SDK_URL;\n  script.onload = cb;\n  document.body.appendChild(script);\n}\nexport default function DropboxSync(_ref) {\n  _s();\n  let {\n    data,\n    onRestore\n  } = _ref;\n  const [token, setToken] = useState(localStorage.getItem(\"keeper-dropbox-token\") || \"\");\n  const [status, setStatus] = useState(\"\");\n  function handleTokenChange(e) {\n    setToken(e.target.value);\n    localStorage.setItem(\"keeper-dropbox-token\", e.target.value);\n  }\n  function uploadToDropbox() {\n    if (!token) return alert(\"Please enter your Dropbox access token.\");\n    loadDropboxSdk(() => {\n      const dbx = new window.Dropbox.Dropbox({\n        accessToken: token\n      });\n      setStatus(\"Uploading...\");\n      dbx.filesUpload({\n        path: \"/keeper-notes-backup.json\",\n        contents: JSON.stringify(data, null, 2),\n        mode: {\n          \".tag\": \"overwrite\"\n        }\n      }).then(() => setStatus(\"Backup uploaded to Dropbox!\")).catch(err => setStatus(\"Upload failed: \" + err.message));\n    });\n  }\n  function downloadFromDropbox() {\n    if (!token) return alert(\"Please enter your Dropbox access token.\");\n    loadDropboxSdk(() => {\n      const dbx = new window.Dropbox.Dropbox({\n        accessToken: token\n      });\n      setStatus(\"Downloading...\");\n      dbx.filesDownload({\n        path: \"/keeper-notes-backup.json\"\n      }).then(res => {\n        const reader = new FileReader();\n        reader.onload = evt => {\n          try {\n            const json = JSON.parse(evt.target.result);\n            onRestore(json);\n            setStatus(\"Backup restored from Dropbox!\");\n          } catch {\n            setStatus(\"Downloaded file is invalid/corrupt.\");\n          }\n        };\n        reader.readAsText(res.fileBlob);\n      }).catch(err => setStatus(\"Download failed: \" + err.message));\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropbox-sync\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Dropbox Cloud Sync\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: token,\n    onChange: handleTokenChange,\n    placeholder: \"Dropbox access token\",\n    style: {\n      width: \"100%\",\n      marginBottom: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: uploadToDropbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"\\u2B06\\uFE0F Backup to Dropbox\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: downloadFromDropbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"\\u2B07\\uFE0F Restore from Dropbox\")), status && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 18\n    }\n  }, status), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.dropbox.com/developers/apps\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Get access token (Dropbox App Console)\")));\n}\n_s(DropboxSync, \"V9vzRjsgZGpUVH3Sk4Kyov8kg+E=\");\n_c = DropboxSync;\nvar _c;\n$RefreshReg$(_c, \"DropboxSync\");","map":{"version":3,"names":["React","useState","DROPBOX_SDK_URL","loadDropboxSdk","cb","window","Dropbox","script","document","createElement","src","onload","body","appendChild","DropboxSync","_ref","_s","data","onRestore","token","setToken","localStorage","getItem","status","setStatus","handleTokenChange","e","target","value","setItem","uploadToDropbox","alert","dbx","accessToken","filesUpload","path","contents","JSON","stringify","mode","then","catch","err","message","downloadFromDropbox","filesDownload","res","reader","FileReader","evt","json","parse","result","readAsText","fileBlob","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","width","marginBottom","display","gap","onClick","marginTop","href","rel","_c","$RefreshReg$"],"sources":["D:/Web Development/keeper-part-3-completed/src/components/DropboxSync.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n// Dropbox JS SDK via CDN (for browser)\nconst DROPBOX_SDK_URL = \"https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js\";\n\nfunction loadDropboxSdk(cb) {\n  if (window.Dropbox) return cb();\n  const script = document.createElement(\"script\");\n  script.src = DROPBOX_SDK_URL;\n  script.onload = cb;\n  document.body.appendChild(script);\n}\n\nexport default function DropboxSync({ data, onRestore }) {\n  const [token, setToken] = useState(localStorage.getItem(\"keeper-dropbox-token\") || \"\");\n  const [status, setStatus] = useState(\"\");\n\n  function handleTokenChange(e) {\n    setToken(e.target.value);\n    localStorage.setItem(\"keeper-dropbox-token\", e.target.value);\n  }\n\n  function uploadToDropbox() {\n    if (!token) return alert(\"Please enter your Dropbox access token.\");\n    loadDropboxSdk(() => {\n      const dbx = new window.Dropbox.Dropbox({ accessToken: token });\n      setStatus(\"Uploading...\");\n      dbx.filesUpload({\n        path: \"/keeper-notes-backup.json\",\n        contents: JSON.stringify(data, null, 2),\n        mode: { \".tag\": \"overwrite\" }\n      })\n        .then(() => setStatus(\"Backup uploaded to Dropbox!\"))\n        .catch(err => setStatus(\"Upload failed: \" + err.message));\n    });\n  }\n\n  function downloadFromDropbox() {\n    if (!token) return alert(\"Please enter your Dropbox access token.\");\n    loadDropboxSdk(() => {\n      const dbx = new window.Dropbox.Dropbox({ accessToken: token });\n      setStatus(\"Downloading...\");\n      dbx.filesDownload({ path: \"/keeper-notes-backup.json\" })\n        .then(res => {\n          const reader = new FileReader();\n          reader.onload = evt => {\n            try {\n              const json = JSON.parse(evt.target.result);\n              onRestore(json);\n              setStatus(\"Backup restored from Dropbox!\");\n            } catch {\n              setStatus(\"Downloaded file is invalid/corrupt.\");\n            }\n          };\n          reader.readAsText(res.fileBlob);\n        })\n        .catch(err => setStatus(\"Download failed: \" + err.message));\n    });\n  }\n\n  return (\n    <div className=\"dropbox-sync\">\n      <h4>Dropbox Cloud Sync</h4>\n      <input\n        type=\"text\"\n        value={token}\n        onChange={handleTokenChange}\n        placeholder=\"Dropbox access token\"\n        style={{ width: \"100%\", marginBottom: 8 }}\n      />\n      <div style={{ display: \"flex\", gap: 8 }}>\n        <button onClick={uploadToDropbox}>⬆️ Backup to Dropbox</button>\n        <button onClick={downloadFromDropbox}>⬇️ Restore from Dropbox</button>\n      </div>\n      {status && <div style={{ marginTop: 8 }}>{status}</div>}\n      <small>\n        <a href=\"https://www.dropbox.com/developers/apps\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Get access token (Dropbox App Console)\n        </a>\n      </small>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}