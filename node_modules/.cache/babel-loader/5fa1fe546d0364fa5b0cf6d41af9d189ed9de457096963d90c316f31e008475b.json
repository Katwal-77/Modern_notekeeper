{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\keeper-part-3-completed\\\\src\\\\components\\\\CreateArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nfunction CreateArea(_ref) {\n  _s();\n  let {\n    onAdd,\n    search,\n    setSearch\n  } = _ref;\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(prevNote => ({\n      ...prevNote,\n      [name]: value\n    }));\n  }\n  function submitNote(event) {\n    event.preventDefault();\n    if (!note.title.trim() && !note.content.trim()) {\n      setError(\"Note cannot be empty\");\n      return;\n    }\n    setError(\"\");\n    onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: note.title,\n    placeholder: \"Title\",\n    \"aria-label\": \"Note title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    onChange: handleChange,\n    value: note.content,\n    placeholder: \"Take a note...\",\n    rows: \"3\",\n    \"aria-label\": \"Note content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-btn\",\n    onClick: submitNote,\n    type: \"submit\",\n    \"aria-label\": \"Add note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add-btn-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"\\uFF0B\")), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: \"Search notes...\",\n    \"aria-label\": \"Search notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n_s(CreateArea, \"33dPdevR1A9Tmdfuhr4+5zaSxjo=\");\n_c = CreateArea;\nexport default CreateArea;\nvar _c;\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"names":["React","useState","CreateArea","_ref","_s","onAdd","search","setSearch","note","setNote","title","content","error","setError","handleChange","event","name","value","target","prevNote","submitNote","preventDefault","trim","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","onChange","placeholder","rows","onClick","type","e","_c","$RefreshReg$"],"sources":["D:/Web Development/keeper-part-3-completed/src/components/CreateArea.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction CreateArea({ onAdd, search, setSearch }) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [error, setError] = useState(\"\");\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNote(prevNote => ({\n      ...prevNote,\n      [name]: value\n    }));\n  }\n\n  function submitNote(event) {\n    event.preventDefault();\n    if (!note.title.trim() && !note.content.trim()) {\n      setError(\"Note cannot be empty\");\n      return;\n    }\n    setError(\"\");\n    onAdd(note);\n    setNote({ title: \"\", content: \"\" });\n  }\n\n  return (\n    <div className=\"create-area\">\n      <form autoComplete=\"off\">\n        <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n          aria-label=\"Note title\"\n        />\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          aria-label=\"Note content\"\n        />\n        <button\n          className=\"add-btn\"\n          onClick={submitNote}\n          type=\"submit\"\n          aria-label=\"Add note\"\n        >\n          <span className=\"add-btn-icon\">ï¼‹</span>\n        </button>\n        {error && <p className=\"error-msg\">{error}</p>}\n      </form>\n      <input\n        className=\"search-input\"\n        type=\"text\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n        placeholder=\"Search notes...\"\n        aria-label=\"Search notes\"\n      />\n    </div>\n  );\n}\n\nexport default CreateArea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}