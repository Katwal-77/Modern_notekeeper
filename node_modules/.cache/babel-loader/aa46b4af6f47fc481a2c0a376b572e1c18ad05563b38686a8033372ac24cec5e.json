{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\keeper-part-3-completed\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"../ThemeContext\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport TagSelector from \"./TagSelector\";\nimport confetti from \"canvas-confetti\";\nimport \"../keeper.css\";\nconst defaultTags = [\"Personal\", \"Work\", \"Idea\", \"Urgent\", \"Todo\"];\nconst BADGES = [{\n  key: \"first_note\",\n  icon: \"📝\",\n  label: \"First Note\",\n  desc: \"Created your first note!\"\n}, {\n  key: \"ten_notes\",\n  icon: \"🔟\",\n  label: \"10 Notes\",\n  desc: \"Created 10 notes!\"\n}, {\n  key: \"checklist_pro\",\n  icon: \"✅\",\n  label: \"Checklist Pro\",\n  desc: \"Used a checklist for the first time!\"\n}, {\n  key: \"pin_master\",\n  icon: \"📌\",\n  label: \"Pin Master\",\n  desc: \"Pinned your first note!\"\n}, {\n  key: \"archivist\",\n  icon: \"🗄️\",\n  label: \"Archivist\",\n  desc: \"Archived your first note!\"\n}];\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [editingId, setEditingId] = useState(null);\n  const [tags, setTags] = useState(defaultTags);\n  const [filterTags, setFilterTags] = useState([]);\n  const [filterStatus, setFilterStatus] = useState('all'); // all, pinned, archived, reminders, overdue\n  const [pinnedIds, setPinnedIds] = useState([]);\n  const [archivedIds, setArchivedIds] = useState([]);\n  const [undoStack, setUndoStack] = useState([]);\n  const [badges, setBadges] = useState(() => {\n    const saved = localStorage.getItem(\"keeper-badges\");\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Quotes array for the footer\n  const quotes = [\"The secret of getting ahead is getting started. – Mark Twain\", \"Success is the sum of small efforts, repeated day-in and day-out. – Robert Collier\", \"Don’t watch the clock; do what it does. Keep going. – Sam Levenson\", \"Great things are done by a series of small things brought together. – Van Gogh\", \"Dream big. Start small. Act now. – Robin Sharma\", \"Productivity is never an accident. – Paul J. Meyer\", \"You don’t have to be great to start, but you have to start to be great. – Zig Ziglar\"];\n  const [quoteIdx, setQuoteIdx] = useState(() => Math.floor(Math.random() * quotes.length));\n  function refreshQuote() {\n    let idx;\n    do {\n      idx = Math.floor(Math.random() * quotes.length);\n    } while (idx === quoteIdx);\n    setQuoteIdx(idx);\n  }\n  useEffect(() => {\n    const savedNotes = localStorage.getItem(\"keeper-notes\");\n    if (savedNotes) setNotes(JSON.parse(savedNotes));\n    const savedTags = localStorage.getItem(\"keeper-tags\");\n    if (savedTags) setTags(JSON.parse(savedTags));\n    const savedPinned = localStorage.getItem(\"keeper-pinned\");\n    if (savedPinned) setPinnedIds(JSON.parse(savedPinned));\n    const savedArchived = localStorage.getItem(\"keeper-archived\");\n    if (savedArchived) setArchivedIds(JSON.parse(savedArchived));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-notes\", JSON.stringify(notes));\n  }, [notes]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-tags\", JSON.stringify(tags));\n  }, [tags]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-pinned\", JSON.stringify(pinnedIds));\n  }, [pinnedIds]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-archived\", JSON.stringify(archivedIds));\n  }, [archivedIds]);\n\n  // Reminder notification polling\n  useEffect(() => {\n    if (!('Notification' in window)) return;\n    if (Notification.permission === 'default') {\n      Notification.requestPermission();\n    }\n    let interval;\n    function checkReminders() {\n      const now = new Date();\n      notes.forEach(note => {\n        if (note.reminder && !note.reminderNotified && new Date(note.reminder) <= now) {\n          // Show notification\n          if (Notification.permission === 'granted') {\n            new Notification('Note Reminder', {\n              body: note.title ? `\"${note.title}\"` : 'A note is due!'\n            });\n          }\n          // Mark as notified\n          note.reminderNotified = true;\n        }\n      });\n      // Save updated notes (with notified flags)\n      setNotes(prevNotes => prevNotes.map(note => note.reminder && note.reminderNotified ? {\n        ...note\n      } : note));\n    }\n    interval = setInterval(checkReminders, 30000); // check every 30s\n    return () => clearInterval(interval);\n  }, [notes]);\n  function addNote(newNote) {\n    if (!newNote.title.trim() && !newNote.content.trim() && (!newNote.checklist || newNote.checklist.length === 0)) return;\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setNotes(prevNotes => [{\n      ...newNote,\n      tags: newNote.tags || [],\n      checklist: newNote.checklist || [],\n      reminderNotified: false\n    }, ...prevNotes]);\n    if (newNote.tags) {\n      setTags(prevTags => Array.from(new Set([...prevTags, ...newNote.tags])));\n    }\n    setTimeout(() => {\n      confetti({\n        particleCount: 60,\n        spread: 75,\n        origin: {\n          y: 0.25\n        },\n        colors: [getComputedStyle(document.documentElement).getPropertyValue('--accent').trim() || '#f7b731', '#fff', '#222']\n      });\n    }, 120);\n    if (notes.length === 0) unlockBadge(\"first_note\");\n    if (notes.length + 1 === 10) unlockBadge(\"ten_notes\");\n    if (newNote.checklist && newNote.checklist.length > 0) unlockBadge(\"checklist_pro\");\n  }\n  function deleteNote(id) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setNotes(prevNotes => prevNotes.filter((_, idx) => idx !== id));\n    setPinnedIds(prev => prev.filter(idx => idx !== id));\n    setArchivedIds(prev => prev.filter(idx => idx !== id));\n  }\n  function archiveNote(id) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setArchivedIds(prev => [id, ...prev]);\n    setPinnedIds(prev => prev.filter(idx => idx !== id));\n    if (!badges.includes(\"archivist\")) unlockBadge(\"archivist\");\n  }\n  function unarchiveNote(id) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setArchivedIds(prev => prev.filter(idx => idx !== id));\n  }\n  function startEdit(id) {\n    setEditingId(id);\n  }\n  function handleSaveEdit(id, updatedNote) {\n    setNotes(prevNotes => prevNotes.map(note => note.id === id ? {\n      ...note,\n      ...updatedNote,\n      reminderNotified: false\n    } : note));\n  }\n  function editNote(id, updatedNote) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setNotes(prevNotes => prevNotes.map((note, idx) => idx === id ? {\n      ...updatedNote,\n      tags: updatedNote.tags || [],\n      checklist: updatedNote.checklist || []\n    } : note));\n    setEditingId(null);\n    if (updatedNote.tags) {\n      setTags(prevTags => Array.from(new Set([...prevTags, ...updatedNote.tags])));\n    }\n  }\n  function togglePin(id) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setPinnedIds(prev => prev.includes(id) ? prev.filter(i => i !== id) : [id, ...prev]);\n    if (!badges.includes(\"pin_master\")) unlockBadge(\"pin_master\");\n  }\n  function undo() {\n    if (undoStack.length === 0) return;\n    const prev = undoStack[0];\n    setNotes(prev.notes);\n    setPinnedIds(prev.pinnedIds);\n    setArchivedIds(prev.archivedIds);\n    setUndoStack(stack => stack.slice(1));\n  }\n  function unlockBadge(key) {\n    if (!badges.includes(key)) {\n      setBadges(prev => {\n        const next = [...prev, key];\n        localStorage.setItem(\"keeper-badges\", JSON.stringify(next));\n        return next;\n      });\n    }\n  }\n\n  // Full-text search highlight function\n  function highlightText(text, query) {\n    if (!query) return text;\n    const regex = new RegExp(`(${query.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")})`, \"gi\");\n    const parts = text.split(regex);\n    return parts.map((part, i) => regex.test(part) ? /*#__PURE__*/React.createElement(\"span\", {\n      key: i,\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, part) : part);\n  }\n\n  // Filtering logic\n  function filterNotes(note) {\n    if (filterTags.length > 0 && (!note.tags || !filterTags.every(tag => note.tags.includes(tag)))) return false;\n    if (filterStatus === 'pinned' && !pinnedIds.includes(note.id)) return false;\n    if (filterStatus === 'archived' && !archivedIds.includes(note.id)) return false;\n    if (filterStatus === 'reminders' && !note.reminder) return false;\n    if (filterStatus === 'overdue' && (!note.reminder || new Date(note.reminder) > new Date())) return false;\n    if (filterStatus === 'all' && archivedIds.includes(note.id)) return false;\n    return true;\n  }\n  const filteredNotes = notes.filter(filterNotes).filter(note => {\n    // Full-text search\n    const q = search.trim().toLowerCase();\n    if (!q) return true;\n    const matchTitle = note.title && note.title.toLowerCase().includes(q);\n    const matchContent = note.content && note.content.toLowerCase().includes(q);\n    const matchChecklist = note.checklist && note.checklist.some(item => item.text && item.text.toLowerCase().includes(q));\n    return matchTitle || matchContent || matchChecklist;\n  });\n\n  // Split pinned and unpinned notes\n  const pinnedNotes = filteredNotes.filter(note => pinnedIds.includes(note.id));\n  const unpinnedNotes = filteredNotes.filter(note => !pinnedIds.includes(note.id));\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"keeper-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, BADGES.filter(badge => badges.includes(badge.key)).map(badge => /*#__PURE__*/React.createElement(\"span\", {\n    key: badge.key,\n    className: \"badge\",\n    title: badge.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, badge.icon)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TagSelector, {\n    tags: tags,\n    selectedTags: filterTags,\n    onChange: setFilterTags,\n    allowCreate: false,\n    multiSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'all' ? 'active' : '',\n    onClick: () => setFilterStatus('all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'pinned' ? 'active' : '',\n    onClick: () => setFilterStatus('pinned'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"Pinned\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'archived' ? 'active' : '',\n    onClick: () => setFilterStatus('archived'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, \"Archived\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'reminders' ? 'active' : '',\n    onClick: () => setFilterStatus('reminders'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, \"With Reminders\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'overdue' ? 'active' : '',\n    onClick: () => setFilterStatus('overdue'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"Overdue\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"undo-btn\",\n    onClick: undo,\n    disabled: undoStack.length === 0,\n    title: \"Undo last action\",\n    \"aria-label\": \"Undo last action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, \"\\u21A9\\uFE0F Undo\"), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    search: search,\n    setSearch: setSearch,\n    tags: tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, pinnedNotes.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pinned-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 38\n    }\n  }, \"\\uD83D\\uDCCC Pinned\"), pinnedNotes.map((noteItem, index) => /*#__PURE__*/React.createElement(Note, {\n    key: \"pinned-\" + index,\n    id: noteItem.id,\n    title: noteItem.title,\n    content: noteItem.content,\n    tags: noteItem.tags || [],\n    checklist: noteItem.checklist || [],\n    reminder: noteItem.reminder,\n    onDelete: deleteNote,\n    onEdit: startEdit,\n    editing: editingId === notes.indexOf(noteItem),\n    onSaveEdit: handleSaveEdit,\n    onTogglePin: togglePin,\n    onArchive: archiveNote,\n    pinned: true,\n    allTags: tags,\n    highlightText: highlightText,\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  })), pinnedNotes.length > 0 && /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"pinned-separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 38\n    }\n  }), unpinnedNotes.length === 0 && pinnedNotes.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"empty-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"No notes found. Add one!\") : unpinnedNotes.map((noteItem, index) => /*#__PURE__*/React.createElement(Note, {\n    key: \"unpinned-\" + index,\n    id: noteItem.id,\n    title: noteItem.title,\n    content: noteItem.content,\n    tags: noteItem.tags || [],\n    checklist: noteItem.checklist || [],\n    reminder: noteItem.reminder,\n    onDelete: deleteNote,\n    onEdit: startEdit,\n    editing: editingId === notes.indexOf(noteItem),\n    onSaveEdit: handleSaveEdit,\n    onTogglePin: togglePin,\n    onArchive: archiveNote,\n    pinned: false,\n    allTags: tags,\n    highlightText: highlightText,\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }))), filteredNotes.filter(note => archivedIds.includes(note.id)).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"archived-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"archived-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDDC4\\uFE0F Archived\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, filteredNotes.filter(note => archivedIds.includes(note.id)).map((noteItem, index) => /*#__PURE__*/React.createElement(Note, {\n    key: \"archived-\" + index,\n    id: noteItem.id,\n    title: noteItem.title,\n    content: noteItem.content,\n    tags: noteItem.tags || [],\n    checklist: noteItem.checklist || [],\n    reminder: noteItem.reminder,\n    onDelete: deleteNote,\n    onEdit: startEdit,\n    editing: editingId === notes.indexOf(noteItem),\n    onSaveEdit: handleSaveEdit,\n    onTogglePin: togglePin,\n    onArchive: unarchiveNote,\n    archived: true,\n    pinned: pinnedIds.includes(noteItem.id),\n    allTags: tags,\n    highlightText: highlightText,\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, quotes[quoteIdx]), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"refresh-quote-btn\",\n    onClick: refreshQuote,\n    \"aria-label\": \"New quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDD04\")))));\n}\n_s(App, \"R6yOpyy+vKQk7yTWJuBr1bEniRI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","Header","Footer","Note","CreateArea","TagSelector","confetti","defaultTags","BADGES","key","icon","label","desc","App","_s","notes","setNotes","search","setSearch","editingId","setEditingId","tags","setTags","filterTags","setFilterTags","filterStatus","setFilterStatus","pinnedIds","setPinnedIds","archivedIds","setArchivedIds","undoStack","setUndoStack","badges","setBadges","saved","localStorage","getItem","JSON","parse","quotes","quoteIdx","setQuoteIdx","Math","floor","random","length","refreshQuote","idx","savedNotes","savedTags","savedPinned","savedArchived","setItem","stringify","window","Notification","permission","requestPermission","interval","checkReminders","now","Date","forEach","note","reminder","reminderNotified","body","title","prevNotes","map","setInterval","clearInterval","addNote","newNote","trim","content","checklist","prev","slice","prevTags","Array","from","Set","setTimeout","particleCount","spread","origin","y","colors","getComputedStyle","document","documentElement","getPropertyValue","unlockBadge","deleteNote","id","filter","_","archiveNote","includes","unarchiveNote","startEdit","handleSaveEdit","updatedNote","editNote","togglePin","i","undo","stack","next","highlightText","text","query","regex","RegExp","replace","parts","split","part","test","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","filterNotes","every","tag","filteredNotes","q","toLowerCase","matchTitle","matchContent","matchChecklist","some","item","pinnedNotes","unpinnedNotes","badge","selectedTags","onChange","allowCreate","multiSelect","onClick","disabled","onAdd","noteItem","index","onDelete","onEdit","editing","indexOf","onSaveEdit","onTogglePin","onArchive","pinned","allTags","archived","_c","$RefreshReg$"],"sources":["D:/Web Development/keeper-part-3-completed/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"../ThemeContext\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport TagSelector from \"./TagSelector\";\nimport confetti from \"canvas-confetti\";\nimport \"../keeper.css\";\n\nconst defaultTags = [\"Personal\", \"Work\", \"Idea\", \"Urgent\", \"Todo\"];\n\nconst BADGES = [\n  { key: \"first_note\", icon: \"📝\", label: \"First Note\", desc: \"Created your first note!\" },\n  { key: \"ten_notes\", icon: \"🔟\", label: \"10 Notes\", desc: \"Created 10 notes!\" },\n  { key: \"checklist_pro\", icon: \"✅\", label: \"Checklist Pro\", desc: \"Used a checklist for the first time!\" },\n  { key: \"pin_master\", icon: \"📌\", label: \"Pin Master\", desc: \"Pinned your first note!\" },\n  { key: \"archivist\", icon: \"🗄️\", label: \"Archivist\", desc: \"Archived your first note!\" },\n];\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [editingId, setEditingId] = useState(null);\n  const [tags, setTags] = useState(defaultTags);\n  const [filterTags, setFilterTags] = useState([]);\n  const [filterStatus, setFilterStatus] = useState('all'); // all, pinned, archived, reminders, overdue\n  const [pinnedIds, setPinnedIds] = useState([]);\n  const [archivedIds, setArchivedIds] = useState([]);\n  const [undoStack, setUndoStack] = useState([]);\n  const [badges, setBadges] = useState(() => {\n    const saved = localStorage.getItem(\"keeper-badges\");\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Quotes array for the footer\n  const quotes = [\n    \"The secret of getting ahead is getting started. – Mark Twain\",\n    \"Success is the sum of small efforts, repeated day-in and day-out. – Robert Collier\",\n    \"Don’t watch the clock; do what it does. Keep going. – Sam Levenson\",\n    \"Great things are done by a series of small things brought together. – Van Gogh\",\n    \"Dream big. Start small. Act now. – Robin Sharma\",\n    \"Productivity is never an accident. – Paul J. Meyer\",\n    \"You don’t have to be great to start, but you have to start to be great. – Zig Ziglar\"\n  ];\n  const [quoteIdx, setQuoteIdx] = useState(() => Math.floor(Math.random() * quotes.length));\n  function refreshQuote() {\n    let idx;\n    do {\n      idx = Math.floor(Math.random() * quotes.length);\n    } while (idx === quoteIdx);\n    setQuoteIdx(idx);\n  }\n\n  useEffect(() => {\n    const savedNotes = localStorage.getItem(\"keeper-notes\");\n    if (savedNotes) setNotes(JSON.parse(savedNotes));\n    const savedTags = localStorage.getItem(\"keeper-tags\");\n    if (savedTags) setTags(JSON.parse(savedTags));\n    const savedPinned = localStorage.getItem(\"keeper-pinned\");\n    if (savedPinned) setPinnedIds(JSON.parse(savedPinned));\n    const savedArchived = localStorage.getItem(\"keeper-archived\");\n    if (savedArchived) setArchivedIds(JSON.parse(savedArchived));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"keeper-notes\", JSON.stringify(notes));\n  }, [notes]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-tags\", JSON.stringify(tags));\n  }, [tags]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-pinned\", JSON.stringify(pinnedIds));\n  }, [pinnedIds]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-archived\", JSON.stringify(archivedIds));\n  }, [archivedIds]);\n\n  // Reminder notification polling\n  useEffect(() => {\n    if (!('Notification' in window)) return;\n    if (Notification.permission === 'default') {\n      Notification.requestPermission();\n    }\n    let interval;\n    function checkReminders() {\n      const now = new Date();\n      notes.forEach(note => {\n        if (note.reminder && !note.reminderNotified && new Date(note.reminder) <= now) {\n          // Show notification\n          if (Notification.permission === 'granted') {\n            new Notification('Note Reminder', {\n              body: note.title ? `\"${note.title}\"` : 'A note is due!'\n            });\n          }\n          // Mark as notified\n          note.reminderNotified = true;\n        }\n      });\n      // Save updated notes (with notified flags)\n      setNotes(prevNotes => prevNotes.map(note => note.reminder && note.reminderNotified ? { ...note } : note));\n    }\n    interval = setInterval(checkReminders, 30000); // check every 30s\n    return () => clearInterval(interval);\n  }, [notes]);\n\n  function addNote(newNote) {\n    if (!newNote.title.trim() && !newNote.content.trim() && (!newNote.checklist || newNote.checklist.length === 0)) return;\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setNotes(prevNotes => [{ ...newNote, tags: newNote.tags || [], checklist: newNote.checklist || [], reminderNotified: false }, ...prevNotes]);\n    if (newNote.tags) {\n      setTags(prevTags => Array.from(new Set([...prevTags, ...newNote.tags])));\n    }\n    setTimeout(() => {\n      confetti({\n        particleCount: 60,\n        spread: 75,\n        origin: { y: 0.25 },\n        colors: [getComputedStyle(document.documentElement).getPropertyValue('--accent').trim() || '#f7b731', '#fff', '#222']\n      });\n    }, 120);\n    if (notes.length === 0) unlockBadge(\"first_note\");\n    if (notes.length + 1 === 10) unlockBadge(\"ten_notes\");\n    if (newNote.checklist && newNote.checklist.length > 0) unlockBadge(\"checklist_pro\");\n  }\n\n  function deleteNote(id) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setNotes(prevNotes => prevNotes.filter((_, idx) => idx !== id));\n    setPinnedIds(prev => prev.filter(idx => idx !== id));\n    setArchivedIds(prev => prev.filter(idx => idx !== id));\n  }\n\n  function archiveNote(id) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setArchivedIds(prev => [id, ...prev]);\n    setPinnedIds(prev => prev.filter(idx => idx !== id));\n    if (!badges.includes(\"archivist\")) unlockBadge(\"archivist\");\n  }\n\n  function unarchiveNote(id) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setArchivedIds(prev => prev.filter(idx => idx !== id));\n  }\n\n  function startEdit(id) {\n    setEditingId(id);\n  }\n\n  function handleSaveEdit(id, updatedNote) {\n    setNotes(prevNotes => prevNotes.map(note =>\n      note.id === id ? { ...note, ...updatedNote, reminderNotified: false } : note\n    ));\n  }\n\n  function editNote(id, updatedNote) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setNotes(prevNotes => prevNotes.map((note, idx) => idx === id ? { ...updatedNote, tags: updatedNote.tags || [], checklist: updatedNote.checklist || [] } : note));\n    setEditingId(null);\n    if (updatedNote.tags) {\n      setTags(prevTags => Array.from(new Set([...prevTags, ...updatedNote.tags])));\n    }\n  }\n\n  function togglePin(id) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setPinnedIds(prev => prev.includes(id) ? prev.filter(i => i !== id) : [id, ...prev]);\n    if (!badges.includes(\"pin_master\")) unlockBadge(\"pin_master\");\n  }\n\n  function undo() {\n    if (undoStack.length === 0) return;\n    const prev = undoStack[0];\n    setNotes(prev.notes);\n    setPinnedIds(prev.pinnedIds);\n    setArchivedIds(prev.archivedIds);\n    setUndoStack(stack => stack.slice(1));\n  }\n\n  function unlockBadge(key) {\n    if (!badges.includes(key)) {\n      setBadges(prev => {\n        const next = [...prev, key];\n        localStorage.setItem(\"keeper-badges\", JSON.stringify(next));\n        return next;\n      });\n    }\n  }\n\n  // Full-text search highlight function\n  function highlightText(text, query) {\n    if (!query) return text;\n    const regex = new RegExp(`(${query.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")})`, \"gi\");\n    const parts = text.split(regex);\n    return parts.map((part, i) =>\n      regex.test(part)\n        ? <span key={i} className=\"highlight\">{part}</span>\n        : part\n    );\n  }\n\n  // Filtering logic\n  function filterNotes(note) {\n    if (filterTags.length > 0 && (!note.tags || !filterTags.every(tag => note.tags.includes(tag)))) return false;\n    if (filterStatus === 'pinned' && !pinnedIds.includes(note.id)) return false;\n    if (filterStatus === 'archived' && !archivedIds.includes(note.id)) return false;\n    if (filterStatus === 'reminders' && !note.reminder) return false;\n    if (filterStatus === 'overdue' && (!note.reminder || new Date(note.reminder) > new Date())) return false;\n    if (filterStatus === 'all' && archivedIds.includes(note.id)) return false;\n    return true;\n  }\n\n  const filteredNotes = notes.filter(filterNotes).filter(note => {\n    // Full-text search\n    const q = search.trim().toLowerCase();\n    if (!q) return true;\n    const matchTitle = note.title && note.title.toLowerCase().includes(q);\n    const matchContent = note.content && note.content.toLowerCase().includes(q);\n    const matchChecklist = note.checklist && note.checklist.some(item => item.text && item.text.toLowerCase().includes(q));\n    return matchTitle || matchContent || matchChecklist;\n  });\n\n  // Split pinned and unpinned notes\n  const pinnedNotes = filteredNotes.filter(note => pinnedIds.includes(note.id));\n  const unpinnedNotes = filteredNotes.filter(note => !pinnedIds.includes(note.id));\n\n  return (\n    <ThemeProvider>\n      <div className=\"keeper-app\">\n        <Header>\n          <div className=\"badge-bar\">\n            {BADGES.filter(badge => badges.includes(badge.key)).map(badge => (\n              <span key={badge.key} className=\"badge\" title={badge.desc}>{badge.icon}</span>\n            ))}\n          </div>\n        </Header>\n        {/* Filter Bar */}\n        <div className=\"filter-bar\">\n          <TagSelector tags={tags} selectedTags={filterTags} onChange={setFilterTags} allowCreate={false} multiSelect />\n          <div className=\"status-filters\">\n            <button className={filterStatus === 'all' ? 'active' : ''} onClick={() => setFilterStatus('all')}>All</button>\n            <button className={filterStatus === 'pinned' ? 'active' : ''} onClick={() => setFilterStatus('pinned')}>Pinned</button>\n            <button className={filterStatus === 'archived' ? 'active' : ''} onClick={() => setFilterStatus('archived')}>Archived</button>\n            <button className={filterStatus === 'reminders' ? 'active' : ''} onClick={() => setFilterStatus('reminders')}>With Reminders</button>\n            <button className={filterStatus === 'overdue' ? 'active' : ''} onClick={() => setFilterStatus('overdue')}>Overdue</button>\n          </div>\n        </div>\n        <button className=\"undo-btn\" onClick={undo} disabled={undoStack.length === 0} title=\"Undo last action\" aria-label=\"Undo last action\">↩️ Undo</button>\n        <CreateArea onAdd={addNote} search={search} setSearch={setSearch} tags={tags} />\n        <div className=\"notes-grid\">\n          {pinnedNotes.length > 0 && <div className=\"pinned-label\">📌 Pinned</div>}\n          {pinnedNotes.map((noteItem, index) => (\n            <Note\n              key={\"pinned-\" + index}\n              id={noteItem.id}\n              title={noteItem.title}\n              content={noteItem.content}\n              tags={noteItem.tags || []}\n              checklist={noteItem.checklist || []}\n              reminder={noteItem.reminder}\n              onDelete={deleteNote}\n              onEdit={startEdit}\n              editing={editingId === notes.indexOf(noteItem)}\n              onSaveEdit={handleSaveEdit}\n              onTogglePin={togglePin}\n              onArchive={archiveNote}\n              pinned={true}\n              allTags={tags}\n              highlightText={highlightText}\n              search={search}\n            />\n          ))}\n          {pinnedNotes.length > 0 && <hr className=\"pinned-separator\" />}\n          {unpinnedNotes.length === 0 && pinnedNotes.length === 0 ? (\n            <p className=\"empty-msg\">No notes found. Add one!</p>\n          ) : (\n            unpinnedNotes.map((noteItem, index) => (\n              <Note\n                key={\"unpinned-\" + index}\n                id={noteItem.id}\n                title={noteItem.title}\n                content={noteItem.content}\n                tags={noteItem.tags || []}\n                checklist={noteItem.checklist || []}\n                reminder={noteItem.reminder}\n                onDelete={deleteNote}\n                onEdit={startEdit}\n                editing={editingId === notes.indexOf(noteItem)}\n                onSaveEdit={handleSaveEdit}\n                onTogglePin={togglePin}\n                onArchive={archiveNote}\n                pinned={false}\n                allTags={tags}\n                highlightText={highlightText}\n                search={search}\n              />\n            ))\n          )}\n        </div>\n        {filteredNotes.filter(note => archivedIds.includes(note.id)).length > 0 && (\n          <div className=\"archived-section\">\n            <div className=\"archived-label\">🗄️ Archived</div>\n            <div className=\"notes-grid\">\n              {filteredNotes.filter(note => archivedIds.includes(note.id)).map((noteItem, index) => (\n                <Note\n                  key={\"archived-\" + index}\n                  id={noteItem.id}\n                  title={noteItem.title}\n                  content={noteItem.content}\n                  tags={noteItem.tags || []}\n                  checklist={noteItem.checklist || []}\n                  reminder={noteItem.reminder}\n                  onDelete={deleteNote}\n                  onEdit={startEdit}\n                  editing={editingId === notes.indexOf(noteItem)}\n                  onSaveEdit={handleSaveEdit}\n                  onTogglePin={togglePin}\n                  onArchive={unarchiveNote}\n                  archived={true}\n                  pinned={pinnedIds.includes(noteItem.id)}\n                  allTags={tags}\n                  highlightText={highlightText}\n                  search={search}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n        <Footer>\n          <div className=\"quote-footer\">\n            <span className=\"quote\">{quotes[quoteIdx]}</span>\n            <button className=\"refresh-quote-btn\" onClick={refreshQuote} aria-label=\"New quote\">🔄</button>\n          </div>\n        </Footer>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}