{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\keeper-part-3-completed\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"../ThemeContext\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport TagSelector from \"./TagSelector\";\nimport confetti from \"canvas-confetti\";\nimport \"../keeper.css\";\nconst defaultTags = [\"Personal\", \"Work\", \"Idea\", \"Urgent\", \"Todo\"];\nconst BADGES = [{\n  key: \"first_note\",\n  icon: \"📝\",\n  label: \"First Note\",\n  desc: \"Created your first note!\"\n}, {\n  key: \"ten_notes\",\n  icon: \"🔟\",\n  label: \"10 Notes\",\n  desc: \"Created 10 notes!\"\n}, {\n  key: \"checklist_pro\",\n  icon: \"✅\",\n  label: \"Checklist Pro\",\n  desc: \"Used a checklist for the first time!\"\n}, {\n  key: \"pin_master\",\n  icon: \"📌\",\n  label: \"Pin Master\",\n  desc: \"Pinned your first note!\"\n}, {\n  key: \"archivist\",\n  icon: \"🗄️\",\n  label: \"Archivist\",\n  desc: \"Archived your first note!\"\n}];\nfunction hashPassword(pw) {\n  return window.crypto.subtle.digest(\"SHA-256\", new TextEncoder().encode(pw)).then(buf => Array.from(new Uint8Array(buf)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\"));\n}\nfunction PasswordModal(_ref) {\n  _s();\n  let {\n    onUnlock,\n    onSet,\n    mode,\n    error\n  } = _ref;\n  const [pw, setPw] = useState(\"\");\n  const [pw2, setPw2] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pw-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pw-modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, mode === \"set\" ? \"Set a Password\" : \"Unlock Notes\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: pw,\n    onChange: e => setPw(e.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), mode === \"set\" && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    value: pw2,\n    onChange: e => setPw2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pw-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"pw-btn\",\n    onClick: () => {\n      if (mode === \"set\") {\n        if (!pw || !pw2 || pw !== pw2) return;\n        onSet(pw);\n      } else {\n        onUnlock(pw);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, mode === \"set\" ? \"Set Password\" : \"Unlock\")));\n}\n_s(PasswordModal, \"cwOVzsM5bGfoKfbXBGQa085EuyA=\");\n_c = PasswordModal;\nfunction App() {\n  _s2();\n  const [notes, setNotes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [editingId, setEditingId] = useState(null);\n  const [tags, setTags] = useState(defaultTags);\n  const [filterTags, setFilterTags] = useState([]);\n  const [filterStatus, setFilterStatus] = useState('all'); // all, pinned, archived, reminders, overdue\n  const [pinnedIds, setPinnedIds] = useState([]);\n  const [archivedIds, setArchivedIds] = useState([]);\n  const [undoStack, setUndoStack] = useState([]);\n  const [badges, setBadges] = useState(() => {\n    const saved = localStorage.getItem(\"keeper-badges\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [selectedNotes, setSelectedNotes] = useState([]);\n  const [locked, setLocked] = useState(() => !!localStorage.getItem(\"keeper-pw\"));\n  const [pwMode, setPwMode] = useState(\"unlock\"); // or \"set\"\n  const [pwError, setPwError] = useState(\"\");\n\n  // Quotes array for the footer\n  const quotes = [\"The secret of getting ahead is getting started. – Mark Twain\", \"Success is the sum of small efforts, repeated day-in and day-out. – Robert Collier\", \"Don’t watch the clock; do what it does. Keep going. – Sam Levenson\", \"Great things are done by a series of small things brought together. – Van Gogh\", \"Dream big. Start small. Act now. – Robin Sharma\", \"Productivity is never an accident. – Paul J. Meyer\", \"You don’t have to be great to start, but you have to start to be great. – Zig Ziglar\"];\n  const [quoteIdx, setQuoteIdx] = useState(() => Math.floor(Math.random() * quotes.length));\n  function refreshQuote() {\n    let idx;\n    do {\n      idx = Math.floor(Math.random() * quotes.length);\n    } while (idx === quoteIdx);\n    setQuoteIdx(idx);\n  }\n  useEffect(() => {\n    const savedNotes = localStorage.getItem(\"keeper-notes\");\n    if (savedNotes) setNotes(JSON.parse(savedNotes));\n    const savedTags = localStorage.getItem(\"keeper-tags\");\n    if (savedTags) setTags(JSON.parse(savedTags));\n    const savedPinned = localStorage.getItem(\"keeper-pinned\");\n    if (savedPinned) setPinnedIds(JSON.parse(savedPinned));\n    const savedArchived = localStorage.getItem(\"keeper-archived\");\n    if (savedArchived) setArchivedIds(JSON.parse(savedArchived));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-notes\", JSON.stringify(notes));\n  }, [notes]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-tags\", JSON.stringify(tags));\n  }, [tags]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-pinned\", JSON.stringify(pinnedIds));\n  }, [pinnedIds]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-archived\", JSON.stringify(archivedIds));\n  }, [archivedIds]);\n\n  // Reminder notification polling\n  useEffect(() => {\n    if (!('Notification' in window)) return;\n    if (Notification.permission === 'default') {\n      Notification.requestPermission();\n    }\n    let interval;\n    function checkReminders() {\n      const now = new Date();\n      notes.forEach(note => {\n        if (note.reminder && !note.reminderNotified && new Date(note.reminder) <= now) {\n          // Show notification\n          if (Notification.permission === 'granted') {\n            new Notification('Note Reminder', {\n              body: note.title ? `\"${note.title}\"` : 'A note is due!'\n            });\n          }\n          // Mark as notified\n          note.reminderNotified = true;\n        }\n      });\n      // Save updated notes (with notified flags)\n      setNotes(prevNotes => prevNotes.map(note => note.reminder && note.reminderNotified ? {\n        ...note\n      } : note));\n    }\n    interval = setInterval(checkReminders, 30000); // check every 30s\n    return () => clearInterval(interval);\n  }, [notes]);\n  async function handleUnlock(pw) {\n    setPwError(\"\");\n    const hash = await hashPassword(pw);\n    if (hash === localStorage.getItem(\"keeper-pw\")) {\n      setLocked(false);\n    } else {\n      setPwError(\"Incorrect password\");\n    }\n  }\n  async function handleSetPassword(pw) {\n    setPwError(\"\");\n    const hash = await hashPassword(pw);\n    localStorage.setItem(\"keeper-pw\", hash);\n    setLocked(false);\n  }\n  function handleLock() {\n    setLocked(true);\n    setPwMode(\"unlock\");\n  }\n  function handleChangePw() {\n    setPwMode(\"set\");\n    setLocked(true);\n  }\n  function addNote(newNote) {\n    if (!newNote.title.trim() && !newNote.content.trim() && (!newNote.checklist || newNote.checklist.length === 0)) return;\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setNotes(prevNotes => [{\n      ...newNote,\n      tags: newNote.tags || [],\n      checklist: newNote.checklist || [],\n      reminderNotified: false\n    }, ...prevNotes]);\n    if (newNote.tags) {\n      setTags(prevTags => Array.from(new Set([...prevTags, ...newNote.tags])));\n    }\n    setTimeout(() => {\n      confetti({\n        particleCount: 60,\n        spread: 75,\n        origin: {\n          y: 0.25\n        },\n        colors: [getComputedStyle(document.documentElement).getPropertyValue('--accent').trim() || '#f7b731', '#fff', '#222']\n      });\n    }, 120);\n    if (notes.length === 0) unlockBadge(\"first_note\");\n    if (notes.length + 1 === 10) unlockBadge(\"ten_notes\");\n    if (newNote.checklist && newNote.checklist.length > 0) unlockBadge(\"checklist_pro\");\n  }\n  function deleteNote(id) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n    setPinnedIds(prev => prev.filter(pid => pid !== id));\n    setArchivedIds(prev => prev.filter(aid => aid !== id));\n    setSelectedNotes(prev => prev.filter(nid => nid !== id));\n  }\n  function archiveNote(id) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setArchivedIds(prev => [id, ...prev]);\n    setPinnedIds(prev => prev.filter(idx => idx !== id));\n    if (!badges.includes(\"archivist\")) unlockBadge(\"archivist\");\n  }\n  function unarchiveNote(id) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setArchivedIds(prev => prev.filter(idx => idx !== id));\n  }\n  function startEdit(id) {\n    setEditingId(id);\n  }\n  function handleSaveEdit(id, updatedNote) {\n    setNotes(prevNotes => prevNotes.map(note => note.id === id ? {\n      ...note,\n      ...updatedNote,\n      reminderNotified: false\n    } : note));\n  }\n  function editNote(id, updatedNote) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setNotes(prevNotes => prevNotes.map((note, idx) => idx === id ? {\n      ...updatedNote,\n      tags: updatedNote.tags || [],\n      checklist: updatedNote.checklist || []\n    } : note));\n    setEditingId(null);\n    if (updatedNote.tags) {\n      setTags(prevTags => Array.from(new Set([...prevTags, ...updatedNote.tags])));\n    }\n  }\n  function togglePin(id) {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setPinnedIds(prev => prev.includes(id) ? prev.filter(i => i !== id) : [id, ...prev]);\n    if (!badges.includes(\"pin_master\")) unlockBadge(\"pin_master\");\n  }\n  function undo() {\n    if (undoStack.length === 0) return;\n    const prev = undoStack[0];\n    setNotes(prev.notes);\n    setPinnedIds(prev.pinnedIds);\n    setArchivedIds(prev.archivedIds);\n    setUndoStack(stack => stack.slice(1));\n  }\n  function unlockBadge(key) {\n    if (!badges.includes(key)) {\n      setBadges(prev => {\n        const next = [...prev, key];\n        localStorage.setItem(\"keeper-badges\", JSON.stringify(next));\n        return next;\n      });\n    }\n  }\n  function toggleSelectNote(id) {\n    setSelectedNotes(prev => prev.includes(id) ? prev.filter(nid => nid !== id) : [...prev, id]);\n  }\n  function selectAllVisible() {\n    setSelectedNotes(filteredNotes.map(n => n.id));\n  }\n  function deselectAll() {\n    setSelectedNotes([]);\n  }\n  function bulkArchive() {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setArchivedIds(prev => Array.from(new Set([...prev, ...selectedNotes])));\n    setPinnedIds(prev => prev.filter(id => !selectedNotes.includes(id)));\n    setSelectedNotes([]);\n  }\n  function bulkUnarchive() {\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setArchivedIds(prev => prev.filter(id => !selectedNotes.includes(id)));\n    setSelectedNotes([]);\n  }\n  function bulkDelete() {\n    if (selectedNotes.length === 0) return; // Do nothing if nothing selected\n    setUndoStack(prev => [{\n      notes,\n      pinnedIds,\n      archivedIds\n    }, ...prev].slice(0, 20));\n    setNotes(prev => prev.filter(note => !selectedNotes.includes(note.id)));\n    setArchivedIds(prev => prev.filter(id => !selectedNotes.includes(id)));\n    setPinnedIds(prev => prev.filter(id => !selectedNotes.includes(id)));\n    setSelectedNotes([]);\n  }\n\n  // Full-text search highlight function\n  function highlightText(text, query) {\n    if (!query) return text;\n    const regex = new RegExp(`(${query.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")})`, \"gi\");\n    const parts = text.split(regex);\n    return parts.map((part, i) => regex.test(part) ? /*#__PURE__*/React.createElement(\"span\", {\n      key: i,\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    }, part) : part);\n  }\n\n  // Filtering logic\n  function filterNotes(note) {\n    if (filterTags.length > 0 && (!note.tags || !filterTags.every(tag => note.tags.includes(tag)))) return false;\n    if (filterStatus === 'pinned' && !pinnedIds.includes(note.id)) return false;\n    if (filterStatus === 'archived' && !archivedIds.includes(note.id)) return false;\n    if (filterStatus === 'reminders' && !note.reminder) return false;\n    if (filterStatus === 'overdue' && (!note.reminder || new Date(note.reminder) > new Date())) return false;\n    if (filterStatus === 'all' && archivedIds.includes(note.id)) return false;\n    return true;\n  }\n  const filteredNotes = notes.filter(filterNotes).filter(note => {\n    // Full-text search\n    const q = search.trim().toLowerCase();\n    if (!q) return true;\n    const matchTitle = note.title && note.title.toLowerCase().includes(q);\n    const matchContent = note.content && note.content.toLowerCase().includes(q);\n    const matchChecklist = note.checklist && note.checklist.some(item => item.text && item.text.toLowerCase().includes(q));\n    return matchTitle || matchContent || matchChecklist;\n  });\n\n  // Split pinned and unpinned notes\n  const pinnedNotes = filteredNotes.filter(note => pinnedIds.includes(note.id));\n  const unpinnedNotes = filteredNotes.filter(note => !pinnedIds.includes(note.id));\n\n  // Export notes as JSON\n  function handleExportNotes() {\n    const data = {\n      notes,\n      pinnedIds,\n      archivedIds,\n      tags,\n      badges\n    };\n    const blob = new Blob([JSON.stringify(data, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `keeper-notes-backup-${new Date().toISOString().slice(0, 10)}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  // Import notes from JSON\n  function handleImportNotes(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = evt => {\n      try {\n        const data = JSON.parse(evt.target.result);\n        if (!Array.isArray(data.notes)) throw new Error('Invalid file');\n        if (window.confirm('Replace all current notes with imported notes? (Cancel to merge)')) {\n          setNotes(data.notes);\n          setPinnedIds(data.pinnedIds || []);\n          setArchivedIds(data.archivedIds || []);\n          setTags(data.tags || []);\n          setBadges(data.badges || []);\n        } else {\n          // Merge\n          setNotes(prev => [...data.notes, ...prev]);\n          setPinnedIds(prev => Array.from(new Set([...(data.pinnedIds || []), ...prev])));\n          setArchivedIds(prev => Array.from(new Set([...(data.archivedIds || []), ...prev])));\n          setTags(prev => Array.from(new Set([...(data.tags || []), ...prev])));\n          setBadges(prev => Array.from(new Set([...(data.badges || []), ...prev])));\n        }\n      } catch {\n        alert('Failed to import notes: invalid or corrupt file.');\n      }\n    };\n    reader.readAsText(file);\n  }\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"keeper-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }, locked && /*#__PURE__*/React.createElement(PasswordModal, {\n    mode: localStorage.getItem(\"keeper-pw\") ? pwMode : \"set\",\n    error: pwError,\n    onUnlock: handleUnlock,\n    onSet: handleSetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, BADGES.filter(badge => badges.includes(badge.key)).map(badge => /*#__PURE__*/React.createElement(\"span\", {\n    key: badge.key,\n    className: \"badge\",\n    title: badge.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  }, badge.icon)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"lock-btn\",\n    onClick: handleLock,\n    title: \"Lock app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDD12\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"change-pw-btn\",\n    onClick: handleChangePw,\n    title: \"Change password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDD11\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"export-btn\",\n    onClick: handleExportNotes,\n    title: \"Export notes as JSON\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }, \"\\u2B07\\uFE0F Export\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"import-btn\",\n    title: \"Import notes from JSON\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, \"\\u2B06\\uFE0F Import\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"application/json\",\n    style: {\n      display: 'none'\n    },\n    onChange: handleImportNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  })))), !locked && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TagSelector, {\n    tags: tags,\n    selectedTags: filterTags,\n    onChange: setFilterTags,\n    allowCreate: false,\n    multiSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'all' ? 'active' : '',\n    onClick: () => setFilterStatus('all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'pinned' ? 'active' : '',\n    onClick: () => setFilterStatus('pinned'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, \"Pinned\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'archived' ? 'active' : '',\n    onClick: () => setFilterStatus('archived'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }\n  }, \"Archived\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'reminders' ? 'active' : '',\n    onClick: () => setFilterStatus('reminders'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, \"With Reminders\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: filterStatus === 'overdue' ? 'active' : '',\n    onClick: () => setFilterStatus('overdue'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 17\n    }\n  }, \"Overdue\"))), selectedNotes.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bulk-action-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 17\n    }\n  }, selectedNotes.length, \" selected\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: selectAllVisible,\n    title: \"Select all visible notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }\n  }, \"Select all\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deselectAll,\n    title: \"Deselect all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }\n  }, \"Deselect\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: bulkArchive,\n    title: \"Archive selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDDC4\\uFE0F Archive\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: bulkUnarchive,\n    title: \"Unarchive selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }\n  }, \"\\u21A9\\uFE0F Unarchive\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: bulkDelete,\n    title: \"Delete selected\",\n    className: \"bulk-delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F Delete\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"undo-btn\",\n    onClick: undo,\n    disabled: undoStack.length === 0,\n    title: \"Undo last action\",\n    \"aria-label\": \"Undo last action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }, \"\\u21A9\\uFE0F Undo\"), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    search: search,\n    setSearch: setSearch,\n    tags: tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, pinnedNotes.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pinned-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 42\n    }\n  }, \"\\uD83D\\uDCCC Pinned\"), pinnedNotes.map((noteItem, index) => /*#__PURE__*/React.createElement(Note, {\n    key: \"pinned-\" + index,\n    id: noteItem.id,\n    title: noteItem.title,\n    content: noteItem.content,\n    tags: noteItem.tags,\n    checklist: noteItem.checklist,\n    reminder: noteItem.reminder,\n    onDelete: deleteNote,\n    onEdit: startEdit,\n    editing: editingId === notes.indexOf(noteItem),\n    onSaveEdit: handleSaveEdit,\n    onTogglePin: togglePin,\n    onArchive: archiveNote,\n    pinned: pinnedIds.includes(noteItem.id),\n    archived: archivedIds.includes(noteItem.id),\n    allTags: tags,\n    highlightText: highlightText,\n    search: search,\n    selected: selectedNotes.includes(noteItem.id),\n    onSelect: toggleSelectNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  })), unpinnedNotes.map((noteItem, index) => /*#__PURE__*/React.createElement(Note, {\n    key: \"unpinned-\" + index,\n    id: noteItem.id,\n    title: noteItem.title,\n    content: noteItem.content,\n    tags: noteItem.tags,\n    checklist: noteItem.checklist,\n    reminder: noteItem.reminder,\n    onDelete: deleteNote,\n    onEdit: startEdit,\n    editing: editingId === notes.indexOf(noteItem),\n    onSaveEdit: handleSaveEdit,\n    onTogglePin: togglePin,\n    onArchive: archiveNote,\n    pinned: pinnedIds.includes(noteItem.id),\n    archived: archivedIds.includes(noteItem.id),\n    allTags: tags,\n    highlightText: highlightText,\n    search: search,\n    selected: selectedNotes.includes(noteItem.id),\n    onSelect: toggleSelectNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 17\n    }\n  }))), filteredNotes.filter(note => archivedIds.includes(note.id)).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"archived-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"archived-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDDC4\\uFE0F Archived\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 17\n    }\n  }, filteredNotes.filter(note => archivedIds.includes(note.id)).map((noteItem, index) => /*#__PURE__*/React.createElement(Note, {\n    key: \"archived-\" + index,\n    id: noteItem.id,\n    title: noteItem.title,\n    content: noteItem.content,\n    tags: noteItem.tags,\n    checklist: noteItem.checklist,\n    reminder: noteItem.reminder,\n    onDelete: deleteNote,\n    onEdit: startEdit,\n    editing: editingId === notes.indexOf(noteItem),\n    onSaveEdit: handleSaveEdit,\n    onTogglePin: togglePin,\n    onArchive: unarchiveNote,\n    archived: true,\n    pinned: pinnedIds.includes(noteItem.id),\n    allTags: tags,\n    highlightText: highlightText,\n    search: search,\n    selected: selectedNotes.includes(noteItem.id),\n    onSelect: toggleSelectNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 17\n    }\n  }, quotes[quoteIdx]), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"refresh-quote-btn\",\n    onClick: refreshQuote,\n    \"aria-label\": \"New quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDD04\"))))));\n}\n_s2(App, \"zRW6oQ7E1JzzM02jxyZWa9KSXtE=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PasswordModal\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","Header","Footer","Note","CreateArea","TagSelector","confetti","defaultTags","BADGES","key","icon","label","desc","hashPassword","pw","window","crypto","subtle","digest","TextEncoder","encode","then","buf","Array","from","Uint8Array","map","b","toString","padStart","join","PasswordModal","_ref","_s","onUnlock","onSet","mode","error","setPw","pw2","setPw2","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","autoFocus","onClick","_c","App","_s2","notes","setNotes","search","setSearch","editingId","setEditingId","tags","setTags","filterTags","setFilterTags","filterStatus","setFilterStatus","pinnedIds","setPinnedIds","archivedIds","setArchivedIds","undoStack","setUndoStack","badges","setBadges","saved","localStorage","getItem","JSON","parse","selectedNotes","setSelectedNotes","locked","setLocked","pwMode","setPwMode","pwError","setPwError","quotes","quoteIdx","setQuoteIdx","Math","floor","random","length","refreshQuote","idx","savedNotes","savedTags","savedPinned","savedArchived","setItem","stringify","Notification","permission","requestPermission","interval","checkReminders","now","Date","forEach","note","reminder","reminderNotified","body","title","prevNotes","setInterval","clearInterval","handleUnlock","hash","handleSetPassword","handleLock","handleChangePw","addNote","newNote","trim","content","checklist","prev","slice","prevTags","Set","setTimeout","particleCount","spread","origin","y","colors","getComputedStyle","document","documentElement","getPropertyValue","unlockBadge","deleteNote","id","filter","pid","aid","nid","archiveNote","includes","unarchiveNote","startEdit","handleSaveEdit","updatedNote","editNote","togglePin","i","undo","stack","next","toggleSelectNote","selectAllVisible","filteredNotes","n","deselectAll","bulkArchive","bulkUnarchive","bulkDelete","highlightText","text","query","regex","RegExp","replace","parts","split","part","test","filterNotes","every","tag","q","toLowerCase","matchTitle","matchContent","matchChecklist","some","item","pinnedNotes","unpinnedNotes","handleExportNotes","data","blob","Blob","url","URL","createObjectURL","a","href","download","toISOString","click","revokeObjectURL","handleImportNotes","file","files","reader","FileReader","onload","evt","result","isArray","Error","confirm","alert","readAsText","badge","accept","style","display","Fragment","selectedTags","allowCreate","multiSelect","disabled","onAdd","noteItem","index","onDelete","onEdit","editing","indexOf","onSaveEdit","onTogglePin","onArchive","pinned","archived","allTags","selected","onSelect","_c2","$RefreshReg$"],"sources":["D:/Web Development/keeper-part-3-completed/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"../ThemeContext\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport TagSelector from \"./TagSelector\";\nimport confetti from \"canvas-confetti\";\nimport \"../keeper.css\";\n\nconst defaultTags = [\"Personal\", \"Work\", \"Idea\", \"Urgent\", \"Todo\"];\n\nconst BADGES = [\n  { key: \"first_note\", icon: \"📝\", label: \"First Note\", desc: \"Created your first note!\" },\n  { key: \"ten_notes\", icon: \"🔟\", label: \"10 Notes\", desc: \"Created 10 notes!\" },\n  { key: \"checklist_pro\", icon: \"✅\", label: \"Checklist Pro\", desc: \"Used a checklist for the first time!\" },\n  { key: \"pin_master\", icon: \"📌\", label: \"Pin Master\", desc: \"Pinned your first note!\" },\n  { key: \"archivist\", icon: \"🗄️\", label: \"Archivist\", desc: \"Archived your first note!\" },\n];\n\nfunction hashPassword(pw) {\n  return window.crypto.subtle.digest(\"SHA-256\", new TextEncoder().encode(pw)).then(buf =>\n    Array.from(new Uint8Array(buf)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\")\n  );\n}\n\nfunction PasswordModal({ onUnlock, onSet, mode, error }) {\n  const [pw, setPw] = useState(\"\");\n  const [pw2, setPw2] = useState(\"\");\n  return (\n    <div className=\"pw-modal\">\n      <div className=\"pw-modal-content\">\n        <h2>{mode === \"set\" ? \"Set a Password\" : \"Unlock Notes\"}</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={pw}\n          onChange={e => setPw(e.target.value)}\n          autoFocus\n        />\n        {mode === \"set\" && (\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={pw2}\n            onChange={e => setPw2(e.target.value)}\n          />\n        )}\n        {error && <div className=\"pw-error\">{error}</div>}\n        <button\n          className=\"pw-btn\"\n          onClick={() => {\n            if (mode === \"set\") {\n              if (!pw || !pw2 || pw !== pw2) return;\n              onSet(pw);\n            } else {\n              onUnlock(pw);\n            }\n          }}\n        >{mode === \"set\" ? \"Set Password\" : \"Unlock\"}</button>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [editingId, setEditingId] = useState(null);\n  const [tags, setTags] = useState(defaultTags);\n  const [filterTags, setFilterTags] = useState([]);\n  const [filterStatus, setFilterStatus] = useState('all'); // all, pinned, archived, reminders, overdue\n  const [pinnedIds, setPinnedIds] = useState([]);\n  const [archivedIds, setArchivedIds] = useState([]);\n  const [undoStack, setUndoStack] = useState([]);\n  const [badges, setBadges] = useState(() => {\n    const saved = localStorage.getItem(\"keeper-badges\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [selectedNotes, setSelectedNotes] = useState([]);\n  const [locked, setLocked] = useState(() => !!localStorage.getItem(\"keeper-pw\"));\n  const [pwMode, setPwMode] = useState(\"unlock\"); // or \"set\"\n  const [pwError, setPwError] = useState(\"\");\n\n  // Quotes array for the footer\n  const quotes = [\n    \"The secret of getting ahead is getting started. – Mark Twain\",\n    \"Success is the sum of small efforts, repeated day-in and day-out. – Robert Collier\",\n    \"Don’t watch the clock; do what it does. Keep going. – Sam Levenson\",\n    \"Great things are done by a series of small things brought together. – Van Gogh\",\n    \"Dream big. Start small. Act now. – Robin Sharma\",\n    \"Productivity is never an accident. – Paul J. Meyer\",\n    \"You don’t have to be great to start, but you have to start to be great. – Zig Ziglar\"\n  ];\n  const [quoteIdx, setQuoteIdx] = useState(() => Math.floor(Math.random() * quotes.length));\n  function refreshQuote() {\n    let idx;\n    do {\n      idx = Math.floor(Math.random() * quotes.length);\n    } while (idx === quoteIdx);\n    setQuoteIdx(idx);\n  }\n\n  useEffect(() => {\n    const savedNotes = localStorage.getItem(\"keeper-notes\");\n    if (savedNotes) setNotes(JSON.parse(savedNotes));\n    const savedTags = localStorage.getItem(\"keeper-tags\");\n    if (savedTags) setTags(JSON.parse(savedTags));\n    const savedPinned = localStorage.getItem(\"keeper-pinned\");\n    if (savedPinned) setPinnedIds(JSON.parse(savedPinned));\n    const savedArchived = localStorage.getItem(\"keeper-archived\");\n    if (savedArchived) setArchivedIds(JSON.parse(savedArchived));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"keeper-notes\", JSON.stringify(notes));\n  }, [notes]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-tags\", JSON.stringify(tags));\n  }, [tags]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-pinned\", JSON.stringify(pinnedIds));\n  }, [pinnedIds]);\n  useEffect(() => {\n    localStorage.setItem(\"keeper-archived\", JSON.stringify(archivedIds));\n  }, [archivedIds]);\n\n  // Reminder notification polling\n  useEffect(() => {\n    if (!('Notification' in window)) return;\n    if (Notification.permission === 'default') {\n      Notification.requestPermission();\n    }\n    let interval;\n    function checkReminders() {\n      const now = new Date();\n      notes.forEach(note => {\n        if (note.reminder && !note.reminderNotified && new Date(note.reminder) <= now) {\n          // Show notification\n          if (Notification.permission === 'granted') {\n            new Notification('Note Reminder', {\n              body: note.title ? `\"${note.title}\"` : 'A note is due!'\n            });\n          }\n          // Mark as notified\n          note.reminderNotified = true;\n        }\n      });\n      // Save updated notes (with notified flags)\n      setNotes(prevNotes => prevNotes.map(note => note.reminder && note.reminderNotified ? { ...note } : note));\n    }\n    interval = setInterval(checkReminders, 30000); // check every 30s\n    return () => clearInterval(interval);\n  }, [notes]);\n\n  async function handleUnlock(pw) {\n    setPwError(\"\");\n    const hash = await hashPassword(pw);\n    if (hash === localStorage.getItem(\"keeper-pw\")) {\n      setLocked(false);\n    } else {\n      setPwError(\"Incorrect password\");\n    }\n  }\n  async function handleSetPassword(pw) {\n    setPwError(\"\");\n    const hash = await hashPassword(pw);\n    localStorage.setItem(\"keeper-pw\", hash);\n    setLocked(false);\n  }\n  function handleLock() {\n    setLocked(true);\n    setPwMode(\"unlock\");\n  }\n  function handleChangePw() {\n    setPwMode(\"set\");\n    setLocked(true);\n  }\n\n  function addNote(newNote) {\n    if (!newNote.title.trim() && !newNote.content.trim() && (!newNote.checklist || newNote.checklist.length === 0)) return;\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setNotes(prevNotes => [{ ...newNote, tags: newNote.tags || [], checklist: newNote.checklist || [], reminderNotified: false }, ...prevNotes]);\n    if (newNote.tags) {\n      setTags(prevTags => Array.from(new Set([...prevTags, ...newNote.tags])));\n    }\n    setTimeout(() => {\n      confetti({\n        particleCount: 60,\n        spread: 75,\n        origin: { y: 0.25 },\n        colors: [getComputedStyle(document.documentElement).getPropertyValue('--accent').trim() || '#f7b731', '#fff', '#222']\n      });\n    }, 120);\n    if (notes.length === 0) unlockBadge(\"first_note\");\n    if (notes.length + 1 === 10) unlockBadge(\"ten_notes\");\n    if (newNote.checklist && newNote.checklist.length > 0) unlockBadge(\"checklist_pro\");\n  }\n\n  function deleteNote(id) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n    setPinnedIds(prev => prev.filter(pid => pid !== id));\n    setArchivedIds(prev => prev.filter(aid => aid !== id));\n    setSelectedNotes(prev => prev.filter(nid => nid !== id));\n  }\n\n  function archiveNote(id) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setArchivedIds(prev => [id, ...prev]);\n    setPinnedIds(prev => prev.filter(idx => idx !== id));\n    if (!badges.includes(\"archivist\")) unlockBadge(\"archivist\");\n  }\n\n  function unarchiveNote(id) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setArchivedIds(prev => prev.filter(idx => idx !== id));\n  }\n\n  function startEdit(id) {\n    setEditingId(id);\n  }\n\n  function handleSaveEdit(id, updatedNote) {\n    setNotes(prevNotes => prevNotes.map(note =>\n      note.id === id ? { ...note, ...updatedNote, reminderNotified: false } : note\n    ));\n  }\n\n  function editNote(id, updatedNote) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setNotes(prevNotes => prevNotes.map((note, idx) => idx === id ? { ...updatedNote, tags: updatedNote.tags || [], checklist: updatedNote.checklist || [] } : note));\n    setEditingId(null);\n    if (updatedNote.tags) {\n      setTags(prevTags => Array.from(new Set([...prevTags, ...updatedNote.tags])));\n    }\n  }\n\n  function togglePin(id) {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setPinnedIds(prev => prev.includes(id) ? prev.filter(i => i !== id) : [id, ...prev]);\n    if (!badges.includes(\"pin_master\")) unlockBadge(\"pin_master\");\n  }\n\n  function undo() {\n    if (undoStack.length === 0) return;\n    const prev = undoStack[0];\n    setNotes(prev.notes);\n    setPinnedIds(prev.pinnedIds);\n    setArchivedIds(prev.archivedIds);\n    setUndoStack(stack => stack.slice(1));\n  }\n\n  function unlockBadge(key) {\n    if (!badges.includes(key)) {\n      setBadges(prev => {\n        const next = [...prev, key];\n        localStorage.setItem(\"keeper-badges\", JSON.stringify(next));\n        return next;\n      });\n    }\n  }\n\n  function toggleSelectNote(id) {\n    setSelectedNotes(prev => prev.includes(id) ? prev.filter(nid => nid !== id) : [...prev, id]);\n  }\n  function selectAllVisible() {\n    setSelectedNotes(filteredNotes.map(n => n.id));\n  }\n  function deselectAll() {\n    setSelectedNotes([]);\n  }\n  function bulkArchive() {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setArchivedIds(prev => Array.from(new Set([...prev, ...selectedNotes])));\n    setPinnedIds(prev => prev.filter(id => !selectedNotes.includes(id)));\n    setSelectedNotes([]);\n  }\n  function bulkUnarchive() {\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setArchivedIds(prev => prev.filter(id => !selectedNotes.includes(id)));\n    setSelectedNotes([]);\n  }\n  function bulkDelete() {\n    if (selectedNotes.length === 0) return; // Do nothing if nothing selected\n    setUndoStack(prev => [{ notes, pinnedIds, archivedIds }, ...prev].slice(0, 20));\n    setNotes(prev => prev.filter(note => !selectedNotes.includes(note.id)));\n    setArchivedIds(prev => prev.filter(id => !selectedNotes.includes(id)));\n    setPinnedIds(prev => prev.filter(id => !selectedNotes.includes(id)));\n    setSelectedNotes([]);\n  }\n\n  // Full-text search highlight function\n  function highlightText(text, query) {\n    if (!query) return text;\n    const regex = new RegExp(`(${query.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")})`, \"gi\");\n    const parts = text.split(regex);\n    return parts.map((part, i) =>\n      regex.test(part)\n        ? <span key={i} className=\"highlight\">{part}</span>\n        : part\n    );\n  }\n\n  // Filtering logic\n  function filterNotes(note) {\n    if (filterTags.length > 0 && (!note.tags || !filterTags.every(tag => note.tags.includes(tag)))) return false;\n    if (filterStatus === 'pinned' && !pinnedIds.includes(note.id)) return false;\n    if (filterStatus === 'archived' && !archivedIds.includes(note.id)) return false;\n    if (filterStatus === 'reminders' && !note.reminder) return false;\n    if (filterStatus === 'overdue' && (!note.reminder || new Date(note.reminder) > new Date())) return false;\n    if (filterStatus === 'all' && archivedIds.includes(note.id)) return false;\n    return true;\n  }\n\n  const filteredNotes = notes.filter(filterNotes).filter(note => {\n    // Full-text search\n    const q = search.trim().toLowerCase();\n    if (!q) return true;\n    const matchTitle = note.title && note.title.toLowerCase().includes(q);\n    const matchContent = note.content && note.content.toLowerCase().includes(q);\n    const matchChecklist = note.checklist && note.checklist.some(item => item.text && item.text.toLowerCase().includes(q));\n    return matchTitle || matchContent || matchChecklist;\n  });\n\n  // Split pinned and unpinned notes\n  const pinnedNotes = filteredNotes.filter(note => pinnedIds.includes(note.id));\n  const unpinnedNotes = filteredNotes.filter(note => !pinnedIds.includes(note.id));\n\n  // Export notes as JSON\n  function handleExportNotes() {\n    const data = {\n      notes,\n      pinnedIds,\n      archivedIds,\n      tags,\n      badges\n    };\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `keeper-notes-backup-${new Date().toISOString().slice(0,10)}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  // Import notes from JSON\n  function handleImportNotes(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = evt => {\n      try {\n        const data = JSON.parse(evt.target.result);\n        if (!Array.isArray(data.notes)) throw new Error('Invalid file');\n        if (window.confirm('Replace all current notes with imported notes? (Cancel to merge)')) {\n          setNotes(data.notes);\n          setPinnedIds(data.pinnedIds || []);\n          setArchivedIds(data.archivedIds || []);\n          setTags(data.tags || []);\n          setBadges(data.badges || []);\n        } else {\n          // Merge\n          setNotes(prev => [...data.notes, ...prev]);\n          setPinnedIds(prev => Array.from(new Set([...(data.pinnedIds || []), ...prev])));\n          setArchivedIds(prev => Array.from(new Set([...(data.archivedIds || []), ...prev])));\n          setTags(prev => Array.from(new Set([...(data.tags || []), ...prev])));\n          setBadges(prev => Array.from(new Set([...(data.badges || []), ...prev])));\n        }\n      } catch {\n        alert('Failed to import notes: invalid or corrupt file.');\n      }\n    };\n    reader.readAsText(file);\n  }\n\n  return (\n    <ThemeProvider>\n      <div className=\"keeper-app\">\n        {locked && <PasswordModal mode={localStorage.getItem(\"keeper-pw\") ? pwMode : \"set\"} error={pwError} onUnlock={handleUnlock} onSet={handleSetPassword} />}\n        <Header>\n          <div className=\"badge-bar\">\n            {BADGES.filter(badge => badges.includes(badge.key)).map(badge => (\n              <span key={badge.key} className=\"badge\" title={badge.desc}>{badge.icon}</span>\n            ))}\n            <button className=\"lock-btn\" onClick={handleLock} title=\"Lock app\">🔒</button>\n            <button className=\"change-pw-btn\" onClick={handleChangePw} title=\"Change password\">🔑</button>\n            <button className=\"export-btn\" onClick={handleExportNotes} title=\"Export notes as JSON\">⬇️ Export</button>\n            <label className=\"import-btn\" title=\"Import notes from JSON\">\n              ⬆️ Import\n              <input type=\"file\" accept=\"application/json\" style={{ display: 'none' }} onChange={handleImportNotes} />\n            </label>\n          </div>\n        </Header>\n        {!locked && (\n          <>\n            {/* Filter Bar */}\n            <div className=\"filter-bar\">\n              <TagSelector tags={tags} selectedTags={filterTags} onChange={setFilterTags} allowCreate={false} multiSelect />\n              <div className=\"status-filters\">\n                <button className={filterStatus === 'all' ? 'active' : ''} onClick={() => setFilterStatus('all')}>All</button>\n                <button className={filterStatus === 'pinned' ? 'active' : ''} onClick={() => setFilterStatus('pinned')}>Pinned</button>\n                <button className={filterStatus === 'archived' ? 'active' : ''} onClick={() => setFilterStatus('archived')}>Archived</button>\n                <button className={filterStatus === 'reminders' ? 'active' : ''} onClick={() => setFilterStatus('reminders')}>With Reminders</button>\n                <button className={filterStatus === 'overdue' ? 'active' : ''} onClick={() => setFilterStatus('overdue')}>Overdue</button>\n              </div>\n            </div>\n            {/* Bulk Action Bar */}\n            {selectedNotes.length > 0 && (\n              <div className=\"bulk-action-bar\">\n                <span>{selectedNotes.length} selected</span>\n                <button onClick={selectAllVisible} title=\"Select all visible notes\">Select all</button>\n                <button onClick={deselectAll} title=\"Deselect all\">Deselect</button>\n                <button onClick={bulkArchive} title=\"Archive selected\">🗄️ Archive</button>\n                <button onClick={bulkUnarchive} title=\"Unarchive selected\">↩️ Unarchive</button>\n                <button onClick={bulkDelete} title=\"Delete selected\" className=\"bulk-delete\">🗑️ Delete</button>\n              </div>\n            )}\n            <button className=\"undo-btn\" onClick={undo} disabled={undoStack.length === 0} title=\"Undo last action\" aria-label=\"Undo last action\">↩️ Undo</button>\n            <CreateArea onAdd={addNote} search={search} setSearch={setSearch} tags={tags} />\n            <div className=\"notes-grid\">\n              {pinnedNotes.length > 0 && <div className=\"pinned-label\">📌 Pinned</div>}\n              {pinnedNotes.map((noteItem, index) => (\n                <Note\n                  key={\"pinned-\" + index}\n                  id={noteItem.id}\n                  title={noteItem.title}\n                  content={noteItem.content}\n                  tags={noteItem.tags}\n                  checklist={noteItem.checklist}\n                  reminder={noteItem.reminder}\n                  onDelete={deleteNote}\n                  onEdit={startEdit}\n                  editing={editingId === notes.indexOf(noteItem)}\n                  onSaveEdit={handleSaveEdit}\n                  onTogglePin={togglePin}\n                  onArchive={archiveNote}\n                  pinned={pinnedIds.includes(noteItem.id)}\n                  archived={archivedIds.includes(noteItem.id)}\n                  allTags={tags}\n                  highlightText={highlightText}\n                  search={search}\n                  selected={selectedNotes.includes(noteItem.id)}\n                  onSelect={toggleSelectNote}\n                />\n              ))}\n              {unpinnedNotes.map((noteItem, index) => (\n                <Note\n                  key={\"unpinned-\" + index}\n                  id={noteItem.id}\n                  title={noteItem.title}\n                  content={noteItem.content}\n                  tags={noteItem.tags}\n                  checklist={noteItem.checklist}\n                  reminder={noteItem.reminder}\n                  onDelete={deleteNote}\n                  onEdit={startEdit}\n                  editing={editingId === notes.indexOf(noteItem)}\n                  onSaveEdit={handleSaveEdit}\n                  onTogglePin={togglePin}\n                  onArchive={archiveNote}\n                  pinned={pinnedIds.includes(noteItem.id)}\n                  archived={archivedIds.includes(noteItem.id)}\n                  allTags={tags}\n                  highlightText={highlightText}\n                  search={search}\n                  selected={selectedNotes.includes(noteItem.id)}\n                  onSelect={toggleSelectNote}\n                />\n              ))}\n            </div>\n            {filteredNotes.filter(note => archivedIds.includes(note.id)).length > 0 && (\n              <div className=\"archived-section\">\n                <div className=\"archived-label\">🗄️ Archived</div>\n                <div className=\"notes-grid\">\n                  {filteredNotes.filter(note => archivedIds.includes(note.id)).map((noteItem, index) => (\n                    <Note\n                      key={\"archived-\" + index}\n                      id={noteItem.id}\n                      title={noteItem.title}\n                      content={noteItem.content}\n                      tags={noteItem.tags}\n                      checklist={noteItem.checklist}\n                      reminder={noteItem.reminder}\n                      onDelete={deleteNote}\n                      onEdit={startEdit}\n                      editing={editingId === notes.indexOf(noteItem)}\n                      onSaveEdit={handleSaveEdit}\n                      onTogglePin={togglePin}\n                      onArchive={unarchiveNote}\n                      archived={true}\n                      pinned={pinnedIds.includes(noteItem.id)}\n                      allTags={tags}\n                      highlightText={highlightText}\n                      search={search}\n                      selected={selectedNotes.includes(noteItem.id)}\n                      onSelect={toggleSelectNote}\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n            {/* Footer with quote */}\n            <Footer>\n              <div className=\"quote-footer\">\n                <span className=\"quote\">{quotes[quoteIdx]}</span>\n                <button className=\"refresh-quote-btn\" onClick={refreshQuote} aria-label=\"New quote\">🔄</button>\n              </div>\n            </Footer>\n          </>\n        )}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}