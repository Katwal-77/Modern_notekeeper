{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\keeper-part-3-completed\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TagSelector from \"./TagSelector\";\nimport jsPDF from \"jspdf\";\nfunction Note(_ref) {\n  _s();\n  let {\n    id,\n    title,\n    content,\n    tags,\n    checklist = [],\n    reminder,\n    onDelete,\n    onEdit,\n    editing,\n    onSaveEdit,\n    onTogglePin,\n    onArchive,\n    archived,\n    pinned,\n    allTags,\n    highlightText,\n    search\n  } = _ref;\n  const [editMode, setEditMode] = useState(editing);\n  const [editNote, setEditNote] = useState({\n    title,\n    content,\n    tags,\n    checklist,\n    reminder\n  });\n  const [copied, setCopied] = useState(false);\n  const [pdfExported, setPdfExported] = useState(false);\n  const noteRef = useRef(null);\n  useEffect(() => {\n    setEditMode(editing);\n    setEditNote({\n      title,\n      content,\n      tags,\n      checklist,\n      reminder\n    });\n    if (editing && noteRef.current) noteRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\"\n    });\n  }, [editing, title, content, tags, checklist, reminder]);\n  function handleDelete() {\n    onDelete(id);\n  }\n  function handleEdit() {\n    setEditMode(true);\n    onEdit(id);\n  }\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditNote(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n  function handleReminderChange(e) {\n    setEditNote(prev => ({\n      ...prev,\n      reminder: e.target.value\n    }));\n  }\n  function handleTagsChange(selectedTags) {\n    setEditNote(prev => ({\n      ...prev,\n      tags: selectedTags\n    }));\n  }\n  function handleChecklistChange(idx, checked) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.map((item, i) => i === idx ? {\n        ...item,\n        checked\n      } : item)\n    }));\n  }\n  function handleChecklistText(idx, text) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.map((item, i) => i === idx ? {\n        ...item,\n        text\n      } : item)\n    }));\n  }\n  function addChecklistItem() {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: [...(prev.checklist || []), {\n        text: \"\",\n        checked: false\n      }]\n    }));\n  }\n  function removeChecklistItem(idx) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.filter((_, i) => i !== idx)\n    }));\n  }\n  function handleSave() {\n    if (!editNote.title.trim() && !editNote.content.trim() && (!editNote.checklist || editNote.checklist.length === 0)) return;\n    onSaveEdit(id, editNote);\n    setEditMode(false);\n  }\n  function handleCancel() {\n    setEditMode(false);\n    setEditNote({\n      title,\n      content,\n      tags,\n      checklist,\n      reminder\n    });\n    onSaveEdit(id, {\n      title,\n      content,\n      tags,\n      checklist,\n      reminder\n    });\n  }\n  function getPlainText() {\n    let txt = `Title: ${title}\\n`;\n    if (content) txt += `Content: ${content}\\n`;\n    if (checklist && checklist.length > 0) {\n      txt += 'Checklist:\\n';\n      checklist.forEach(item => {\n        txt += `- [${item.checked ? 'x' : ' '}] ${item.text}\\n`;\n      });\n    }\n    if (tags && tags.length > 0) txt += `Tags: ${tags.join(\", \")}`;\n    if (reminder) txt += `\\nReminder: ${reminder}`;\n    return txt;\n  }\n  function handleCopy() {\n    navigator.clipboard.writeText(getPlainText());\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1400);\n  }\n  function handleExportTxt() {\n    const blob = new Blob([getPlainText()], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title || 'note'}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n  function handleExportPdf() {\n    const doc = new jsPDF();\n    let y = 15;\n    doc.setFontSize(16);\n    doc.text(title || 'Untitled Note', 10, y);\n    y += 10;\n    doc.setFontSize(12);\n    if (content) {\n      const lines = doc.splitTextToSize(content, 180);\n      doc.text('Content:', 10, y);\n      y += 7;\n      doc.text(lines, 12, y);\n      y += lines.length * 7;\n    }\n    if (checklist && checklist.length > 0) {\n      doc.text('Checklist:', 10, y);\n      y += 7;\n      checklist.forEach(item => {\n        doc.text(`- [${item.checked ? 'x' : ' '}] ${item.text}`, 12, y);\n        y += 7;\n      });\n    }\n    if (tags && tags.length > 0) {\n      doc.text(`Tags: ${tags.join(', ')}`, 10, y);\n      y += 7;\n    }\n    if (reminder) {\n      doc.text(`Reminder: ${reminder}`, 10, y);\n      y += 7;\n    }\n    doc.save(`${title || 'note'}.pdf`);\n    setPdfExported(true);\n    setTimeout(() => setPdfExported(false), 1400);\n  }\n\n  // Reminder display helpers\n  const isOverdue = reminder && new Date(reminder) < new Date();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `note fade-in${archived ? \" archived\" : \"\"}`,\n    ref: noteRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `pin-btn${pinned ? \" pinned\" : \"\"}`,\n    title: pinned ? \"Unpin note\" : \"Pin note\",\n    \"aria-label\": pinned ? \"Unpin note\" : \"Pin note\",\n    onClick: () => onTogglePin(id),\n    disabled: archived,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, pinned ? \"📌\" : \"📍\"), editMode ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    value: editNote.title,\n    onChange: handleChange,\n    className: \"note-edit-title\",\n    \"aria-label\": \"Edit note title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    value: editNote.content,\n    onChange: handleChange,\n    className: \"note-edit-content\",\n    rows: \"3\",\n    \"aria-label\": \"Edit note content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checklist-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, (editNote.checklist || []).map((item, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    className: \"checklist-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: item.checked,\n    onChange: e => handleChecklistChange(idx, e.target.checked),\n    \"aria-label\": \"Checklist item completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: item.text,\n    onChange: e => handleChecklistText(idx, e.target.value),\n    className: \"checklist-input\",\n    placeholder: \"Checklist item\",\n    \"aria-label\": \"Checklist item text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-btn\",\n    onClick: () => removeChecklistItem(idx),\n    \"aria-label\": \"Remove checklist item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"\\u2715\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-btn\",\n    type: \"button\",\n    onClick: addChecklistItem,\n    \"aria-label\": \"Add checklist item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"\\uFF0B\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reminder-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `reminder-${id}`,\n    className: \"reminder-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"\\u23F0 Reminder:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    id: `reminder-${id}`,\n    name: \"reminder\",\n    value: editNote.reminder || \"\",\n    onChange: handleReminderChange,\n    className: \"reminder-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }), editNote.reminder && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-btn\",\n    type: \"button\",\n    onClick: () => handleReminderChange({\n      target: {\n        value: \"\"\n      }\n    }),\n    \"aria-label\": \"Clear reminder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 35\n    }\n  }, \"\\u2715\")), /*#__PURE__*/React.createElement(TagSelector, {\n    tags: allTags,\n    selectedTags: editNote.tags,\n    onChange: handleTagsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-edit-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-btn\",\n    onClick: handleSave,\n    \"aria-label\": \"Save note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cancel-btn\",\n    onClick: handleCancel,\n    \"aria-label\": \"Cancel edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, highlightText ? highlightText(title, search) : title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, highlightText ? highlightText(content, search) : content), checklist && checklist.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"checklist-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, checklist.map((item, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    className: item.checked ? \"checked\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: item.checked,\n    readOnly: true,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, item.text)))), reminder && /*#__PURE__*/React.createElement(\"div\", {\n    className: `reminder-view${isOverdue ? \" overdue\" : \"\"}`,\n    title: isOverdue ? \"Reminder overdue!\" : \"Reminder set\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reminder-bell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, \"\\u23F0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reminder-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, new Date(reminder).toLocaleString()), isOverdue && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reminder-overdue-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, \"(Overdue)\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, (tags || []).map(tag => /*#__PURE__*/React.createElement(\"span\", {\n    key: tag,\n    className: \"tag-chip\",\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, tag))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, !archived && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit-btn\",\n    onClick: handleEdit,\n    \"aria-label\": \"Edit note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 27\n    }\n  }, \"\\u270E\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-btn\",\n    onClick: handleDelete,\n    \"aria-label\": \"Delete note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: archived ? \"unarchive-btn\" : \"archive-btn\",\n    onClick: () => onArchive(id),\n    \"aria-label\": archived ? \"Unarchive note\" : \"Archive note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, archived ? \"↩️ Unarchive\" : \"🗄️ Archive\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"copy-btn\",\n    onClick: handleCopy,\n    \"aria-label\": \"Copy note to clipboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, copied ? \"✓ Copied!\" : \"📋 Copy\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"export-btn\",\n    onClick: handleExportTxt,\n    \"aria-label\": \"Export note as text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"\\u2B07\\uFE0F TXT\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"export-btn\",\n    onClick: handleExportPdf,\n    \"aria-label\": \"Export note as PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, pdfExported ? \"✓ PDF\" : \"⬇️ PDF\"))));\n}\n_s(Note, \"G1xSoVTLYtf7LPxu+7ed4MtvI/c=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TagSelector","jsPDF","Note","_ref","_s","id","title","content","tags","checklist","reminder","onDelete","onEdit","editing","onSaveEdit","onTogglePin","onArchive","archived","pinned","allTags","highlightText","search","editMode","setEditMode","editNote","setEditNote","copied","setCopied","pdfExported","setPdfExported","noteRef","current","scrollIntoView","behavior","block","handleDelete","handleEdit","handleChange","e","name","value","target","prev","handleReminderChange","handleTagsChange","selectedTags","handleChecklistChange","idx","checked","map","item","i","handleChecklistText","text","addChecklistItem","removeChecklistItem","filter","_","handleSave","trim","length","handleCancel","getPlainText","txt","forEach","join","handleCopy","navigator","clipboard","writeText","setTimeout","handleExportTxt","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleExportPdf","doc","y","setFontSize","lines","splitTextToSize","save","isOverdue","Date","className","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Fragment","onChange","rows","key","placeholder","htmlFor","readOnly","tabIndex","toLocaleString","tag","_c","$RefreshReg$"],"sources":["D:/Web Development/keeper-part-3-completed/src/components/Note.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport TagSelector from \"./TagSelector\";\nimport jsPDF from \"jspdf\";\n\nfunction Note({ id, title, content, tags, checklist = [], reminder, onDelete, onEdit, editing, onSaveEdit, onTogglePin, onArchive, archived, pinned, allTags, highlightText, search }) {\n  const [editMode, setEditMode] = useState(editing);\n  const [editNote, setEditNote] = useState({ title, content, tags, checklist, reminder });\n  const [copied, setCopied] = useState(false);\n  const [pdfExported, setPdfExported] = useState(false);\n  const noteRef = useRef(null);\n\n  useEffect(() => {\n    setEditMode(editing);\n    setEditNote({ title, content, tags, checklist, reminder });\n    if (editing && noteRef.current) noteRef.current.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n  }, [editing, title, content, tags, checklist, reminder]);\n\n  function handleDelete() {\n    onDelete(id);\n  }\n\n  function handleEdit() {\n    setEditMode(true);\n    onEdit(id);\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setEditNote(prev => ({ ...prev, [name]: value }));\n  }\n\n  function handleReminderChange(e) {\n    setEditNote(prev => ({ ...prev, reminder: e.target.value }));\n  }\n\n  function handleTagsChange(selectedTags) {\n    setEditNote(prev => ({ ...prev, tags: selectedTags }));\n  }\n\n  function handleChecklistChange(idx, checked) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.map((item, i) => i === idx ? { ...item, checked } : item)\n    }));\n  }\n\n  function handleChecklistText(idx, text) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.map((item, i) => i === idx ? { ...item, text } : item)\n    }));\n  }\n\n  function addChecklistItem() {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: [...(prev.checklist || []), { text: \"\", checked: false }]\n    }));\n  }\n\n  function removeChecklistItem(idx) {\n    setEditNote(prev => ({\n      ...prev,\n      checklist: prev.checklist.filter((_, i) => i !== idx)\n    }));\n  }\n\n  function handleSave() {\n    if (!editNote.title.trim() && !editNote.content.trim() && (!editNote.checklist || editNote.checklist.length === 0)) return;\n    onSaveEdit(id, editNote);\n    setEditMode(false);\n  }\n\n  function handleCancel() {\n    setEditMode(false);\n    setEditNote({ title, content, tags, checklist, reminder });\n    onSaveEdit(id, { title, content, tags, checklist, reminder });\n  }\n\n  function getPlainText() {\n    let txt = `Title: ${title}\\n`;\n    if (content) txt += `Content: ${content}\\n`;\n    if (checklist && checklist.length > 0) {\n      txt += 'Checklist:\\n';\n      checklist.forEach(item => {\n        txt += `- [${item.checked ? 'x' : ' '}] ${item.text}\\n`;\n      });\n    }\n    if (tags && tags.length > 0) txt += `Tags: ${tags.join(\", \")}`;\n    if (reminder) txt += `\\nReminder: ${reminder}`;\n    return txt;\n  }\n\n  function handleCopy() {\n    navigator.clipboard.writeText(getPlainText());\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1400);\n  }\n\n  function handleExportTxt() {\n    const blob = new Blob([getPlainText()], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title || 'note'}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  function handleExportPdf() {\n    const doc = new jsPDF();\n    let y = 15;\n    doc.setFontSize(16);\n    doc.text(title || 'Untitled Note', 10, y);\n    y += 10;\n    doc.setFontSize(12);\n    if (content) {\n      const lines = doc.splitTextToSize(content, 180);\n      doc.text('Content:', 10, y);\n      y += 7;\n      doc.text(lines, 12, y);\n      y += lines.length * 7;\n    }\n    if (checklist && checklist.length > 0) {\n      doc.text('Checklist:', 10, y);\n      y += 7;\n      checklist.forEach(item => {\n        doc.text(`- [${item.checked ? 'x' : ' '}] ${item.text}`, 12, y);\n        y += 7;\n      });\n    }\n    if (tags && tags.length > 0) {\n      doc.text(`Tags: ${tags.join(', ')}`, 10, y);\n      y += 7;\n    }\n    if (reminder) {\n      doc.text(`Reminder: ${reminder}`, 10, y);\n      y += 7;\n    }\n    doc.save(`${title || 'note'}.pdf`);\n    setPdfExported(true);\n    setTimeout(() => setPdfExported(false), 1400);\n  }\n\n  // Reminder display helpers\n  const isOverdue = reminder && new Date(reminder) < new Date();\n\n  return (\n    <div className={`note fade-in${archived ? \" archived\" : \"\"}`} ref={noteRef}>\n      <button\n        className={`pin-btn${pinned ? \" pinned\" : \"\"}`}\n        title={pinned ? \"Unpin note\" : \"Pin note\"}\n        aria-label={pinned ? \"Unpin note\" : \"Pin note\"}\n        onClick={() => onTogglePin(id)}\n        disabled={archived}\n      >\n        {pinned ? \"📌\" : \"📍\"}\n      </button>\n      {editMode ? (\n        <>\n          <input\n            name=\"title\"\n            value={editNote.title}\n            onChange={handleChange}\n            className=\"note-edit-title\"\n            aria-label=\"Edit note title\"\n          />\n          <textarea\n            name=\"content\"\n            value={editNote.content}\n            onChange={handleChange}\n            className=\"note-edit-content\"\n            rows=\"3\"\n            aria-label=\"Edit note content\"\n          />\n          <div className=\"checklist-edit\">\n            {(editNote.checklist || []).map((item, idx) => (\n              <div key={idx} className=\"checklist-row\">\n                <input\n                  type=\"checkbox\"\n                  checked={item.checked}\n                  onChange={e => handleChecklistChange(idx, e.target.checked)}\n                  aria-label=\"Checklist item completed\"\n                />\n                <input\n                  type=\"text\"\n                  value={item.text}\n                  onChange={e => handleChecklistText(idx, e.target.value)}\n                  className=\"checklist-input\"\n                  placeholder=\"Checklist item\"\n                  aria-label=\"Checklist item text\"\n                />\n                <button className=\"delete-btn\" onClick={() => removeChecklistItem(idx)} aria-label=\"Remove checklist item\">✕</button>\n              </div>\n            ))}\n            <button className=\"add-btn\" type=\"button\" onClick={addChecklistItem} aria-label=\"Add checklist item\">＋</button>\n          </div>\n          <div className=\"reminder-edit\">\n            <label htmlFor={`reminder-${id}`} className=\"reminder-label\">⏰ Reminder:</label>\n            <input\n              type=\"datetime-local\"\n              id={`reminder-${id}`}\n              name=\"reminder\"\n              value={editNote.reminder || \"\"}\n              onChange={handleReminderChange}\n              className=\"reminder-input\"\n            />\n            {editNote.reminder && <button className=\"delete-btn\" type=\"button\" onClick={() => handleReminderChange({ target: { value: \"\" } })} aria-label=\"Clear reminder\">✕</button>}\n          </div>\n          <TagSelector tags={allTags} selectedTags={editNote.tags} onChange={handleTagsChange} />\n          <div className=\"note-edit-actions\">\n            <button className=\"save-btn\" onClick={handleSave} aria-label=\"Save note\">Save</button>\n            <button className=\"cancel-btn\" onClick={handleCancel} aria-label=\"Cancel edit\">Cancel</button>\n          </div>\n        </>\n      ) : (\n        <>\n          <h1>{highlightText ? highlightText(title, search) : title}</h1>\n          <p>{highlightText ? highlightText(content, search) : content}</p>\n          {(checklist && checklist.length > 0) && (\n            <ul className=\"checklist-view\">\n              {checklist.map((item, idx) => (\n                <li key={idx} className={item.checked ? \"checked\" : \"\"}>\n                  <input\n                    type=\"checkbox\"\n                    checked={item.checked}\n                    readOnly\n                    tabIndex={-1}\n                  />\n                  <span>{item.text}</span>\n                </li>\n              ))}\n            </ul>\n          )}\n          {reminder && (\n            <div className={`reminder-view${isOverdue ? \" overdue\" : \"\"}`} title={isOverdue ? \"Reminder overdue!\" : \"Reminder set\"}>\n              <span className=\"reminder-bell\">⏰</span>\n              <span className=\"reminder-time\">{new Date(reminder).toLocaleString()}</span>\n              {isOverdue && <span className=\"reminder-overdue-label\">(Overdue)</span>}\n            </div>\n          )}\n          <div className=\"note-tags\">\n            {(tags || []).map(tag => (\n              <span key={tag} className=\"tag-chip\" tabIndex={-1}>{tag}</span>\n            ))}\n          </div>\n          <div className=\"note-actions\">\n            {!archived && <button className=\"edit-btn\" onClick={handleEdit} aria-label=\"Edit note\">✎</button>}\n            <button className=\"delete-btn\" onClick={handleDelete} aria-label=\"Delete note\">🗑️</button>\n            <button\n              className={archived ? \"unarchive-btn\" : \"archive-btn\"}\n              onClick={() => onArchive(id)}\n              aria-label={archived ? \"Unarchive note\" : \"Archive note\"}\n            >\n              {archived ? \"↩️ Unarchive\" : \"🗄️ Archive\"}\n            </button>\n            <button className=\"copy-btn\" onClick={handleCopy} aria-label=\"Copy note to clipboard\">{copied ? \"✓ Copied!\" : \"📋 Copy\"}</button>\n            <button className=\"export-btn\" onClick={handleExportTxt} aria-label=\"Export note as text\">⬇️ TXT</button>\n            <button className=\"export-btn\" onClick={handleExportPdf} aria-label=\"Export note as PDF\">{pdfExported ? \"✓ PDF\" : \"⬇️ PDF\"}</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Note;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}